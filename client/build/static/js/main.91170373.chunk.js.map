{"version":3,"sources":["history.js","actions/index.js","components/Landing.js","components/Authentication/Logout.js","components/NavigationBar.js","components/GlobalError.js","components/Arena/Headphone.js","components/Arena/HeadphoneList.js","components/Arena/Overview.js","components/Arena/Specification.js","components/Arena/TopPosts.js","components/Arena/SelectedHeadphone.js","components/Arena/SelectedList.js","components/LiveChat/ChatMessage.js","components/LiveChat/ChatInput.js","components/LiveChat/LiveChat.js","components/Arena/Arena.js","components/Arena/HeadphoneCreate.js","components/Arena/HeadphoneDelete.js","components/Arena/HeadphoneEdit.js","components/Forum/ForumCategory.js","components/Forum/ForumSearch.js","components/Forum/ForumSearchPosts.js","components/Forum/ForumStyling.js","components/Forum/Forum.js","components/Forum/TagLibrary.js","components/Forum/TagSystem.js","components/Authentication/Register.js","components/Authentication/Login.js","components/Forum/ReplyCreate.js","components/Forum/Vote.js","components/Forum/MainPost.js","components/Forum/Reply.js","components/Forum/PostShow.js","components/Forum/PostCreate.js","components/Forum/PostEdit.js","components/Forum/PostDelete.js","components/Blacksmith/Blacksmith.js","components/UserProfile/UploadPicture.js","components/UserProfile/PersonalHeadphones.js","components/UserProfile/SendPrivateMessage.js","components/UserProfile/Dashboard.js","components/Authentication/Authentication.js","components/Authentication/CheckAuth.js","components/App.js","reducers/index.js","reducers/arenaReducers.js","reducers/forumReducers.js","reducers/userProfileReducers.js","reducers/authenticationReducers.js","reducers/errorReducers.js","index.js"],"names":["createHistory","fetchListOfHeadphones","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","wrap","_context","prev","next","axios","get","sent","type","payload","data","t0","addGlobalError","stop","this","_x","apply","arguments","selectHeadphone","headphoneSelected","selectHeadphoneUsingNameOnly","headphoneName","getState","headphoneEntry","listOfHeadphones","find","headphone","brandAndModel","redirectToMainPost","post","_ref4","_callee4","_context4","isMainPost","history","push","concat","_id","title","console","log","_x4","fetchForumHomePosts","_ref5","_callee5","_context5","_x5","storeSearchTerm","searchTerm","fetchUnpopulatedSearchPosts","term","_ref6","_callee6","_context6","_x6","fetchPost","id","_ref9","_callee9","_context9","_x10","updatePost","updateObj","mainPostId","_ref10","_callee10","_context10","put","_x11","fetchUserProfile","userId","_ref11","_callee11","_context11","_x12","errorMessage","LandingPage","react_default","createElement","className","Logout","onButtonClick","_this","props","logoutUser","onClick","React","Component","connect","state","currentUser","_ref15","_callee15","_context15","go","_x16","NavigationBar","currentLocation","location","pathname","_this2","listen","setState","user","Authentication_Logout","src","alt","some","path","includes","GlobalError","currentError","removeErrorAfterTimeOut","setTimeout","globalError","Headphone","_this$props","firstHeadphone","borderLeft","marginLeft","paddingLeft","boxSizing","_this$props2","style","manageFirstHeadphoneStyle","brand","toUpperCase","model","HeadphoneList","sequencedList","shiftHeadphonesAtInterval","currentList","toConsumableArray","previousFirst","shift","newList","intervalId","setInterval","clearInterval","_this3","map","Arena_Headphone","key","renderListOfHeadphones","Overview","tags","length","allTags","reduce","array","currentEntry","sortedTags","currentTag","uniqueTag","tagName","count","filter","tag","sort","b","slice","renderTags","officialDescription","Specification","specification","impedance","connector","portability","color","cable","driver","sensitivity","frequencyResponse","classification","maximumPower","weight","inTheBox","TopPosts","_this$props$headphone","fetchTopPosts","posts","content","manageVoteIcon","vote","dist_default","fromNow","created","topPosts","renderTopPosts","ownProps","entry","_ref3","_callee3","_context3","_x3","SelectedHeadphone","page","fetchFullHeadphone","fullHeadphone","Arena_Overview","Arena_Specification","Arena_TopPosts","average","ratings","acc","curr","rating","removeHeadphone","image","manageSelectedPage","background","renderRatings","window","open","amazonLink","price","renderCurrentPage","fullHeadphones","headphoneRemoved","_ref2","_callee2","_context2","_x2","SelectedList","selectedList","selectedHeadphone","Arena_SelectedHeadphone","renderListOfSelectedHeadphones","listOfSelectedHeadphones","ChatMessage","headphoneNamesWithRegex","forEach","match","regex","exec","message","objectSpread","_this$props$message","author","username","ChatInput","Math","floor","random","authorId","postMessage","postObj","fetchChatMessages","value","onChange","event","target","onKeyPress","e","nextProps","prevState","LiveChat","messages","headphones","convertHeadphoneNamesToRegex","reverse","LiveChat_ChatMessage","alternative","allModelWords","replace","split","join","requirement","requirement2","RegExp","renderChatMessages","LiveChat_ChatInput","Arena","Arena_HeadphoneList","Arena_SelectedList","components_LiveChat_LiveChat","HeadphoneCreate","onFormSubmit","preventDefault","postToServer","_this$state","allInputs","name","defineProperty","mapStateKeysToJSX","HeadphoneDelete","confirmationIsActive","delete","confirmation","HeadphoneEdit","fetchHeadphoneEntry","_response$data","updateDatabase","Arena_HeadphoneDelete","renderExistingNames","renderDeleteButton","ForumCategory","renderCategoryPosts","category","substring","searchActive","ForumSearch","onSearchInputChange","fetchSearchPosts","element","backgroundColor","display","borderColor","manageSearchStyle","forumSearchTerm","_ref7","_callee8","unpopulatedSearchPosts","populatedPosts","_context8","forumSearchPosts","_ref8","_callee7","populatedResponse","_context7","_x9","_x7","_x8","ForumSearchPosts","searchPosts","totalReplies","renderSearchPosts","manageNameDisplay","ForumStyling","Forum","forumPosts","_this$props$forumPost","comparison","recommendation","review","general","Forum_ForumCategory","Forum_ForumSearch","Forum_ForumSearchPosts","Forum_ForumStyling","TagLibrary","criteria","TagSystem","searchMatches","taggedHeadphones","selectedTagLine","selectedCriteria","outputTags","onHeadphoneSearchInput","searchForHeadphones","regExpPrepare","regExp","test","currentMatch","renderSuggestionsFromMatches","addTaggedHeadphone","removeTaggedHeadphone","removedHeadphoneName","remainingTaggedHeadphones","remainingEntries","renderTagLineFromTaggedHeadphones","taggedHeadphoneName","selectTagLine","renderTagsInEachTagLine","tagEntry","removeTag","renderTaggingCriterias","renderSelectableTags","currentCriteria","addTag","activeHeadphone","existingTag","compileTags","previousTags","notReferencedArr","Register","password","onSubmitClick","registerUser","redirectIfDone","_ref13","_callee13","_context13","_x14","Login","registerIsActive","loginUser","goBack","onRefuseClick","turnOffLogin","renderRegister","Authentication_Register","isNull","turnOffRegister","_ref14","_callee14","_context14","_x15","ReplyCreate","idToReplyTo","retrieveTagsFromTagSystem","replyObj","response2","body","turnOffReplyCreate","components_Authentication_Login","components_Forum_TagSystem","placeholder","askLogin","Vote","onVoteClick","voteNature","upVote","downVote","_this$props3","manageUpVoteIconStyle","manageDownVoteIconStyle","MainPost","renderReplyCreate","_this$props$data$auth","picture","profile","_this$props$data","_this$props$data2","Forum_ReplyCreate","_this$props$data3","format","withTitle","renderAvatar","renderEditButton","manageReplyCreateButton","Forum_Vote","Reply","renderReplies","replies","reply","allowReply","tier","renderButtonToTriggerReplyCreate","PostShow","components_Forum_Reply","params","Forum_MainPost","PostCreate","onCategoryClick","onSubmit","manageClass","PostEdit","prevTags","postId","updateTagsInServer","response1","PostDelete","isActive","Blacksmith","UploadPicture","imageUrl","onUploadClick","profileId","turnOff","PersonalHeadphones","updateHeadphoneRating","renderTaggedHeadphones","taggedHeadphone","onHeartClick","isOwner","allEntriesExceptCurrent","_ref12","_callee12","_context12","_x13","SendPrivateMessage","subject","replyTo","renderReplyUsername","fromUsername","postPrivateMessage","toUserId","fromUserId","checkLogin","Dashboard","editActive","privateMessageActive","checkAuthorization","renderPrivateMessages","privateMessages","activatePrivateMessage","turnOffInterfaces","_this4","_this$props$profile","UserProfile_PersonalHeadphones","UserProfile_SendPrivateMessage","renderPosts","UserProfile_UploadPicture","userProfile","CheckAuth","current","checkUser","_ref16","_callee16","_context16","_x17","App","Router","Switch","Route","exact","component","Landing","Authentication","components_Authentication_CheckAuth","src_components_NavigationBar","src_components_GlobalError","combineReducers","undefined","action","every","reply1","reply2","reply3","reply4","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.91170373.chunk.js","sourcesContent":["import createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory();\r\n","import axios from 'axios';\r\nimport history from '../history';\r\n\r\n//Action Creators\r\n//Arena\r\n//Each headphone entry is a partial object containing only {brand, model, brandAndModel, _id}\r\nexport const fetchListOfHeadphones = () => async dispatch => {\r\n   try {\r\n      var response = await axios.get('/arena');\r\n      dispatch({ type: 'FETCHED_LIST_OF_HEADPHONES', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//Called by SelectedHeadphone component\r\n//Fetch full headphone entry\r\nexport const fetchFullHeadphone = id => async dispatch => {\r\n   try {\r\n      var response = await axios.get(`/headphones/${id}`);\r\n      dispatch({ type: 'FETCHED_FULL_HEADPHONE', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//Called by Headphone component\r\nexport const selectHeadphone = headphoneSelected => {\r\n   return {\r\n      type: 'HEADPHONE_SELECTED',\r\n      payload: headphoneSelected\r\n   };\r\n};\r\n//Called by SelectedHeadphone component\r\nexport const removeHeadphone = headphoneRemoved => {\r\n   return {\r\n      type: 'HEADPHONE_REMOVED',\r\n      payload: headphoneRemoved\r\n   };\r\n};\r\n//Called by MainPost and Reply component\r\nexport const selectHeadphoneUsingNameOnly = headphoneName => (dispatch, getState) => {\r\n   //Look for the headphone entry from redux state using the headphone name\r\n   const headphoneEntry = getState().listOfHeadphones.find(headphone => headphone.brandAndModel === headphoneName);\r\n   //Then call action creator selectHeadphone using the found headphone entry\r\n   dispatch(selectHeadphone(headphoneEntry));\r\n   dispatch({ type: 'HEADPHONE_SELECTED_USING_NAME_ONLY' });\r\n};\r\n//Called by SelectedHeadphone component\r\n//Fetch highest voted posts related to the selected headphone\r\nexport const fetchTopPosts = headphoneName => async dispatch => {\r\n   try {\r\n      const response = await axios.post('/forum/topposts', headphoneName);\r\n      dispatch({ type: 'FETCHED_TOP_POSTS', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//Called by Dashboard, TopPosts, ForumCategory components\r\n//Redirect User to the post's show page\r\nexport const redirectToMainPost = post => async dispatch => {\r\n   if (post.isMainPost) {\r\n      history.push(`/posts/${post._id}`);\r\n   } else {\r\n      try {\r\n         //If this post is a reply, find the main post and then redirect the user\r\n         const response = await axios.post('/posts/find-main', { title: post.title });\r\n         console.log(response);\r\n         history.push(`/posts/${response.data._id}`);\r\n      } catch (err) {\r\n         dispatch(addGlobalError(err.response.data));\r\n      }\r\n   }\r\n   console.log('dispatched!');\r\n   dispatch({ type: 'REDIRECTED_TO_MAIN_POST' });\r\n};\r\n\r\n//Forum\r\n//Called by Forum component\r\nexport const fetchForumHomePosts = () => async dispatch => {\r\n   try {\r\n      const response = await axios.get('/forum');\r\n      dispatch({ type: 'FETCHED_FORUM_POSTS', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//Called by fetchSearchPosts action creator\r\nexport const storeSearchTerm = searchTerm => {\r\n   return {\r\n      type: 'FORUM_SEARCH_TERM',\r\n      payload: searchTerm\r\n   };\r\n};\r\n//Called by fetchSearchPosts action creator\r\n//Search the database for posts using this search term\r\nexport const fetchUnpopulatedSearchPosts = term => async dispatch => {\r\n   try {\r\n      const response = await axios.post('/forum/search', { term });\r\n      dispatch({ type: 'FETCHED_UNPOPULATED_SEARCH_POSTS', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//Called by ForumSearch component\r\nexport const fetchSearchPosts = searchTerm => async (dispatch, getState) => {\r\n   //Store the search term inputted by the user on the forum page in the state\r\n   await dispatch(storeSearchTerm(searchTerm));\r\n   const term = getState().forumSearchTerm;\r\n\r\n   //Search the database for unpopulated-posts using this search term then store it to the state to be rendered first\r\n   await dispatch(fetchUnpopulatedSearchPosts(term));\r\n   const unpopulatedSearchPosts = getState().forumSearchPosts;\r\n\r\n   //Then come back and retrieve the populated search posts to find the number of total replies for each search post\r\n   //Else it takes too long to render the search posts\r\n   var populatedPosts = [];\r\n   unpopulatedSearchPosts.forEach(async post => {\r\n      try {\r\n         var populatedResponse = await axios.get(`/posts/${post._id}`);\r\n         populatedPosts = [...populatedPosts, populatedResponse.data];\r\n         if (populatedPosts.length === unpopulatedSearchPosts.length) {\r\n            dispatch({ type: 'FETCHED_SEARCH_POSTS', payload: populatedPosts });\r\n         }\r\n      } catch (err) {\r\n         dispatch(addGlobalError(err.response.data));\r\n      }\r\n   });\r\n};\r\n//Called by PostShow component\r\nexport const fetchPost = id => async dispatch => {\r\n   try {\r\n      const response = await axios.get(`/posts/${id}`);\r\n      dispatch({ type: 'FETCHED_POST', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//Called by PostEdit and Vote components\r\nexport const updatePost = (id, updateObj, mainPostId) => async dispatch => {\r\n   try {\r\n      const response = await axios.put(`/posts/${id}`, updateObj);\r\n      console.log(response);\r\n      await dispatch(fetchPost(mainPostId));\r\n      dispatch({ type: 'UPDATED_POST' });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//UserProfile\r\nexport const fetchUserProfile = userId => async dispatch => {\r\n   try {\r\n      const response = await axios.get(`/user/${userId}`);\r\n      dispatch({ type: 'FETCHED_USER_PROFILE', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\nexport const updateHeadphoneRating = (profileId, updateObj) => async dispatch => {\r\n   try {\r\n      const response = await axios.put(`/user-profile/${profileId}`, updateObj);\r\n      await dispatch(fetchUserProfile(response.data.userId));\r\n      dispatch({ type: 'UPDATED_USER_PROFILE' });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//Authentication\r\nexport const registerUser = (username, password) => async dispatch => {\r\n   try {\r\n      const response = await axios.post('/register', { username, password });\r\n      dispatch({ type: 'CURRENT_USER', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\nexport const loginUser = (username, password) => async dispatch => {\r\n   try {\r\n      const response = await axios.post('/login', { username, password });\r\n      dispatch({ type: 'CURRENT_USER', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError('Incorrect username or password! Are you registered? Have you forgotten your password?'));\r\n   }\r\n};\r\nexport const logoutUser = () => async dispatch => {\r\n   try {\r\n      const response = await axios.get('/logout');\r\n      //Force page to refresh\r\n      history.go(0);\r\n      dispatch({ type: 'CURRENT_USER', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError('Logout failed. You are stuck here forever haha!'));\r\n   }\r\n};\r\nexport const checkUser = () => async dispatch => {\r\n   try {\r\n      const response = await axios.get('/user');\r\n      dispatch({ type: 'CURRENT_USER', payload: response.data });\r\n   } catch (err) {\r\n      dispatch(addGlobalError(err.response.data));\r\n   }\r\n};\r\n//Global Error\r\nexport const addGlobalError = errorMessage => {\r\n   return {\r\n      type: 'ERROR_MESSAGE',\r\n      payload: errorMessage\r\n   };\r\n};\r\n","import React from 'react';\r\nimport './Landing.css';\r\n\r\nconst LandingPage = () => {\r\n   return (\r\n      <div className=\"landing\">\r\n         <h1 className=\"landing__website-title\">\r\n            HEADPHONES\r\n            <br /> ARENA\r\n         </h1>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../actions';\r\n\r\nclass Logout extends React.Component {\r\n   onButtonClick = () => {\r\n      //Log out user\r\n      this.props.logoutUser();\r\n   };\r\n   render() {\r\n      return (\r\n         <div>\r\n            <button onClick={this.onButtonClick}>Logout</button>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { logoutUser }\r\n)(Logout);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport history from '../history';\r\nimport Logout from './Authentication/Logout';\r\nimport './NavigationBar.css';\r\n\r\nclass NavigationBar extends React.Component {\r\n   state = {\r\n      currentLocation: history.location.pathname\r\n   };\r\n   //Listen to changes in history, this affects which icon in the navigation bar will become 'active'\r\n   componentDidMount() {\r\n      history.listen(location => {\r\n         this.setState({ currentLocation: location.pathname });\r\n      });\r\n   }\r\n   render() {\r\n      var { user } = this.props;\r\n      var { currentLocation } = this.state;\r\n      return (\r\n         <div className=\"navigation-bar\">\r\n            {/* Logout button */}\r\n            {user ? <Logout /> : null}\r\n            {/* To Arena page */}\r\n            <div\r\n               className={`navigation-bar-icon ${\r\n                  currentLocation === '/arena' || currentLocation === '/'\r\n                     ? 'navigation-bar--active'\r\n                     : 'navigation-bar--inactive'\r\n               }`}\r\n               onClick={() => history.push('/arena')}\r\n            >\r\n               <img src=\"https://i.imgur.com/Urok6wJ.png\" alt=\"To Arena Page\" />\r\n               <div className=\"navigation-bar--page-name\">ARENA</div>\r\n            </div>\r\n            {/* To Forum page */}\r\n            <div\r\n               className={`navigation-bar-icon ${\r\n                  ['/forum', '/posts'].some(path => currentLocation.includes(path) || currentLocation === '/')\r\n                     ? 'navigation-bar--active'\r\n                     : 'navigation-bar--inactive'\r\n               }`}\r\n               onClick={() => history.push('/forum')}\r\n            >\r\n               <img src=\"https://i.imgur.com/Spthb5x.png\" alt=\"To Forum Page\" />\r\n               <div className=\"navigation-bar--page-name\">FORUM</div>\r\n            </div>\r\n            {/* To Login page or user's dashboard */}\r\n            <div\r\n               className={`navigation-bar-icon ${\r\n                  ['/user', '/login'].some(path => currentLocation.includes(path) || currentLocation === '/')\r\n                     ? 'navigation-bar--active'\r\n                     : 'navigation-bar--inactive'\r\n               }`}\r\n               onClick={() => history.push(user ? `/user/${user.id}` : `/login`)}\r\n            >\r\n               <img src=\"https://i.imgur.com/Iv5jEih.png\" alt=\"To Login Page or Dashboard\" />\r\n               <div className=\"navigation-bar--page-name\">ACCOUNT</div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return { user: state.currentUser };\r\n};\r\nexport default connect(mapStateToProps)(NavigationBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addGlobalError } from '../actions';\r\nimport './GlobalError.css';\r\n\r\nclass GlobalError extends React.Component {\r\n   state = {\r\n      currentError: ''\r\n   };\r\n   //Handle any new global error\r\n   componentDidUpdate() {\r\n      if (this.props.globalError !== this.state.currentError) {\r\n         //If there is a new error then invoke count-down timer to automatically remove it from screen later\r\n         if (this.props.globalError) {\r\n            this.removeErrorAfterTimeOut();\r\n         }\r\n         //Update the new error to the component state\r\n         //Or empty the state after timeout completes\r\n         this.setState({ currentError: this.props.globalError });\r\n      }\r\n   }\r\n   //Display the global error for 5 seconds, then remove it from redux state\r\n   removeErrorAfterTimeOut = () => {\r\n      setTimeout(() => this.props.addGlobalError(''), 5000);\r\n   };\r\n   render() {\r\n      var { globalError } = this.props;\r\n      if (!globalError) {\r\n         return <div />;\r\n      }\r\n      return <div className=\"global-error\">{globalError}</div>;\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { globalError: state.globalError };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { addGlobalError }\r\n)(GlobalError);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectHeadphone } from '../../actions';\r\n\r\nclass Headphone extends React.Component {\r\n   manageFirstHeadphoneStyle() {\r\n      var { headphone, firstHeadphone } = this.props;\r\n      // Apply the following style only to the first headphone of the list\r\n      return firstHeadphone === headphone.brandAndModel\r\n         ? {\r\n              borderLeft: '6px solid Black',\r\n              marginLeft: 'calc(-.3rem - 6px)',\r\n              paddingLeft: '.3rem',\r\n              boxSizing: 'border-box'\r\n           }\r\n         : null;\r\n   }\r\n   render() {\r\n      var { headphone, selectHeadphone } = this.props;\r\n      return (\r\n         <div className=\"headphone\" style={this.manageFirstHeadphoneStyle()} onClick={() => selectHeadphone(headphone)}>\r\n            <div>\r\n               <div className=\"headphone__brand\">{headphone.brand.toUpperCase()}</div>\r\n            </div>\r\n            <div>\r\n               <div className=\"headphone__model\">{headphone.model.toUpperCase()}</div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   null,\r\n   { selectHeadphone }\r\n)(Headphone);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchListOfHeadphones } from '../../actions';\r\nimport Headphone from './Headphone';\r\n\r\nclass HeadphoneList extends React.Component {\r\n   state = {\r\n      sequencedList: null,\r\n      firstHeadphone: ''\r\n   };\r\n   componentDidMount() {\r\n      this.props.fetchListOfHeadphones();\r\n   }\r\n   componentDidUpdate() {\r\n      if (this.props.listOfHeadphones && !this.state.sequencedList) {\r\n         //First time storing the listOfHeadphones into the component state\r\n         this.setState(\r\n            {\r\n               sequencedList: [...this.props.listOfHeadphones],\r\n               firstHeadphone: this.props.listOfHeadphones[0].brandAndModel\r\n            },\r\n            //Trigger the interval timer after state update\r\n            () => {\r\n               this.intervalId = setInterval(this.shiftHeadphonesAtInterval, 2500);\r\n            }\r\n         );\r\n      }\r\n   }\r\n   //Clean up the interval timer\r\n   componentWillUnmount() {\r\n      clearInterval(this.intervalId);\r\n   }\r\n   //This will move the first headphone of every cycle to the last position\r\n   //Creating an animation effect\r\n   shiftHeadphonesAtInterval = () => {\r\n      var currentList = [...this.state.sequencedList];\r\n      var previousFirst = currentList.shift();\r\n      var newList = [...currentList, previousFirst];\r\n      this.setState({ sequencedList: newList });\r\n   };\r\n   renderListOfHeadphones() {\r\n      if (!this.state.sequencedList) {\r\n         return null;\r\n      }\r\n      //Turn each headphone data object in the listOfHeadphones into a component\r\n      return this.state.sequencedList.map(headphone => {\r\n         return <Headphone headphone={headphone} key={headphone._id} firstHeadphone={this.state.firstHeadphone} />;\r\n      });\r\n   }\r\n\r\n   render() {\r\n      var { listOfHeadphones } = this.props;\r\n      if (!listOfHeadphones) {\r\n         return (\r\n            <div className=\"headphone-list__loading\">\r\n               <img\r\n                  className=\"loading-image\"\r\n                  src=\"https://cdn.dribbble.com/users/924068/screenshots/3757746/dribbble.gif\"\r\n                  alt=\"loading\"\r\n               />\r\n            </div>\r\n         );\r\n      }\r\n      return <div className=\"headphone-list\">{this.renderListOfHeadphones()}</div>;\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return { listOfHeadphones: state.listOfHeadphones };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchListOfHeadphones }\r\n)(HeadphoneList);\r\n","import React from 'react';\r\n\r\nconst renderTags = headphone => {\r\n   if (!headphone) {\r\n      return null;\r\n   }\r\n   //Find the top 9 most chosen tags for this selected headphone\r\n   //Make a new array by extracting all tags from each tag entry\r\n   var allTags = headphone.tags.reduce((array, currentEntry) => {\r\n      return [...array, ...currentEntry.tags];\r\n   }, []);\r\n   //Make an array containing only unique tags\r\n   var uniqueTags = allTags.reduce((array, currentTag) => {\r\n      if (!array.includes(currentTag)) {\r\n         return [...array, currentTag];\r\n      }\r\n      return array;\r\n   }, []);\r\n   //Find out the number of times each tag appears\r\n   var sortedTags = uniqueTags.map(uniqueTag => {\r\n      return { tagName: uniqueTag, count: allTags.filter(tag => tag === uniqueTag).length };\r\n   });\r\n   //Sort tags in descending frequency - tags that appear the most come first\r\n   sortedTags.sort((a, b) => b.count - a.count);\r\n   //Only want the top 9 most chosen tags\r\n   var topTags = sortedTags.slice(0, 9);\r\n   //Render the top 9 most chosen tags for this selected headphone\r\n   return topTags.map(tag => (\r\n      <span key={tag.tagName} className=\"overview__tag\">\r\n         {tag.tagName.toUpperCase()}\r\n      </span>\r\n   ));\r\n};\r\n\r\nconst Overview = ({ headphone }) => {\r\n   return (\r\n      <div className=\"overview\">\r\n         {/* Tags */}\r\n         <div className={headphone.tags.length > 0 ? 'overview__tags' : ''}>{renderTags(headphone)}</div>\r\n         {/* Offical Description */}\r\n         <p className=\"overview__description\">{headphone.officialDescription}</p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\n\r\nconst Specification = ({ headphone: { specification } }) => {\r\n   return (\r\n      <div className=\"specification\">\r\n         {/* Specifications */}\r\n         <div>Impedance</div>\r\n         <div>{specification.impedance}</div>\r\n         <div>Connector</div>\r\n         <div>{specification.connector}</div>\r\n         <div>Portability</div>\r\n         <div>{specification.portability}</div>\r\n         <div>Color</div>\r\n         <div>{specification.color}</div>\r\n         <div>Cable</div>\r\n         <div>{specification.cable}</div>\r\n         <div>Driver</div>\r\n         <div>{specification.driver}</div>\r\n         <div>Sensitivity</div>\r\n         <div>{specification.sensitivity}</div>\r\n         <div>Frequency Response</div>\r\n         <div>{specification.frequencyResponse}</div>\r\n         <div>Classification</div>\r\n         <div>{specification.classification}</div>\r\n         <div>Maximum Power</div>\r\n         <div>{specification.maximumPower}</div>\r\n         <div>Weight</div>\r\n         <div>{specification.weight}</div>\r\n         <div>Included In The Box</div>\r\n         <div>{specification.inTheBox}</div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Specification;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { fetchTopPosts, redirectToMainPost } from '../../actions';\r\n\r\nclass TopPosts extends React.Component {\r\n   componentDidMount() {\r\n      var { brandAndModel, model } = this.props.headphone;\r\n      this.props.fetchTopPosts({ brandAndModel, model });\r\n   }\r\n   renderTopPosts(posts) {\r\n      return posts.map(post => (\r\n         <div key={post._id} className=\"top-posts__post\" onClick={() => this.props.redirectToMainPost(post)}>\r\n            {/* If user clicks on the title of this post, redirect to this post's show page */}\r\n            <div className=\"top-posts__title\">{post.title}</div>\r\n            <div className=\"top-posts__content\">{`${post.content}`}</div>\r\n            {/* Date */}\r\n            <div className=\"top-posts__date\">\r\n               <div>\r\n                  {this.manageVoteIcon(post)}\r\n                  {post.vote.count}\r\n               </div>\r\n               <Moment fromNow>{post.created}</Moment>\r\n            </div>\r\n         </div>\r\n      ));\r\n   }\r\n   manageVoteIcon(post) {\r\n      return post.vote.count >= 0 ? <i className=\"fas fa-angle-up\" /> : <i className=\"fas fa-angle-down\" />;\r\n   }\r\n   render() {\r\n      var { topPosts } = this.props;\r\n      if (!topPosts) {\r\n         return <div />;\r\n      }\r\n      return (\r\n         <div className=\"top-posts\">\r\n            <h4>RELATED POSTS</h4> {this.renderTopPosts(topPosts)}\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n   var entry = state.topPosts.find(entry => entry.headphone === ownProps.headphone.brandAndModel);\r\n   return { topPosts: entry ? entry.topPosts : null };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchTopPosts, redirectToMainPost }\r\n)(TopPosts);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { removeHeadphone, fetchFullHeadphone } from '../../actions';\r\nimport Overview from './Overview';\r\nimport Specification from './Specification';\r\nimport TopPosts from './TopPosts';\r\n\r\n//Destructured selectedHeadphone data object from props\r\nclass SelectedHeadphone extends React.Component {\r\n   state = {\r\n      page: 1\r\n   };\r\n   componentDidMount() {\r\n      this.props.fetchFullHeadphone(this.props.headphone._id);\r\n   }\r\n   renderCurrentPage(fullHeadphone) {\r\n      var { page } = this.state;\r\n      if (page === 1) {\r\n         //Page 1 - overview\r\n         return <Overview headphone={fullHeadphone} />;\r\n      } else if (page === 2) {\r\n         //Page 2 - specification\r\n         return <Specification headphone={fullHeadphone} />;\r\n      } else if (page === 3) {\r\n         //Page 3 - top posts\r\n         return <TopPosts headphone={fullHeadphone} />;\r\n      }\r\n   }\r\n\r\n   renderRatings(headphone) {\r\n      var average;\r\n      if (headphone.ratings.length === 0) {\r\n         average = 10;\r\n      }\r\n      //Find the average rating for this headphone\r\n      else {\r\n         average =\r\n            (headphone.ratings.reduce((acc, curr) => {\r\n               return acc + curr.rating;\r\n            }, 0) /\r\n               headphone.ratings.length) *\r\n            2;\r\n      }\r\n      return `linear-gradient(to right, black ${average * 10}%, white ${100 - average * 10}%)`;\r\n   }\r\n   manageSelectedPage(page) {\r\n      return this.state.page === page ? '--active-page' : null;\r\n   }\r\n   render() {\r\n      if (!this.props.fullHeadphone) {\r\n         return (\r\n            <div className=\"selected-headphone__loading\">\r\n               <img className=\"loading-image\" src=\"https://i.imgur.com/75tvQck.gif\" alt=\"pikachu loading\" />\r\n            </div>\r\n         );\r\n      }\r\n      var { fullHeadphone, headphone, removeHeadphone } = this.props;\r\n      return (\r\n         <div className=\"selected-headphone\">\r\n            {/* Closing button */}\r\n            <div className=\"selected-headphone__close-button\" onClick={() => removeHeadphone(headphone)}>\r\n               X\r\n            </div>\r\n            <div className=\"selected-headphone__essential\">\r\n               {/* Image */}\r\n               <div className=\"selected-headphone__thumbnail\">\r\n                  <img src={fullHeadphone.image} alt={fullHeadphone.model} />\r\n               </div>\r\n               <div>\r\n                  {/* Select pages */}\r\n                  <span\r\n                     className={`selected-headphone__page ${this.manageSelectedPage(1)}`}\r\n                     onClick={() => this.setState({ page: 1 })}\r\n                  />\r\n                  <span\r\n                     className={`selected-headphone__page ${this.manageSelectedPage(2)}`}\r\n                     onClick={() => this.setState({ page: 2 })}\r\n                  />\r\n                  <span\r\n                     className={`selected-headphone__page ${this.manageSelectedPage(3)}`}\r\n                     onClick={() => this.setState({ page: 3 })}\r\n                  />\r\n               </div>\r\n               {/* User ratings */}\r\n               <div\r\n                  className=\"selected-headphone__rating\"\r\n                  style={{\r\n                     background: this.renderRatings(fullHeadphone)\r\n                  }}\r\n               />\r\n               {/* Amazon Button */}\r\n               <div className=\"selected-headphone__amazon\" onClick={() => window.open(fullHeadphone.amazonLink)}>\r\n                  <i className=\"fab fa-amazon\" />\r\n                  <span>{fullHeadphone.price}</span>\r\n               </div>\r\n            </div>\r\n            {/* Name */}\r\n            <h3 className=\"selected-headphone__name\">\r\n               {fullHeadphone.brand} {fullHeadphone.model}\r\n            </h3>\r\n\r\n            {/* Current Page */}\r\n            {this.renderCurrentPage(fullHeadphone)}\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n   var fullHeadphone = state.fullHeadphones.find(entry => entry._id === ownProps.headphone._id);\r\n   return { fullHeadphone };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { removeHeadphone, fetchFullHeadphone }\r\n)(SelectedHeadphone);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SelectedHeadphone from './SelectedHeadphone';\r\n\r\nclass SelectedList extends React.Component {\r\n   renderListOfSelectedHeadphones() {\r\n      //Destructuring list of selected headphones from props\r\n      var { selectedList } = this.props;\r\n      //Turn each selected headphone data object in the selectedList into a component\r\n      return selectedList\r\n         .map(selectedHeadphone => {\r\n            return <SelectedHeadphone headphone={selectedHeadphone} key={selectedHeadphone._id} />;\r\n         })\r\n         .slice(0, 4);\r\n   }\r\n\r\n   render() {\r\n      if (this.props.selectedList.length === 0) {\r\n         return <div className=\"selected-list__empty\">{'HEADPHONES ARENA'}</div>;\r\n      }\r\n      return <div className=\"selected-list\">{this.renderListOfSelectedHeadphones()}</div>;\r\n   }\r\n}\r\n\r\n//Retrieve list of selected headphones from Store\r\nconst mapStateToProps = state => {\r\n   return { selectedList: state.listOfSelectedHeadphones };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SelectedList);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport history from '../../history';\r\nimport { selectHeadphone } from '../../actions';\r\n\r\nclass ChatMessage extends React.Component {\r\n   state = {\r\n      tags: null\r\n   };\r\n\r\n   componentDidUpdate() {\r\n      if (this.props.headphoneNamesWithRegex && !this.state.tags) {\r\n         //Automatically identify any mention of headphone names in the chat message and turn it into a clickable tag\r\n         //When user clicks on this tag, this headphone will be added into the list of selected headphones for detailed comparison at the /arena page\r\n         var allTags = [];\r\n         this.props.headphoneNamesWithRegex.forEach(headphone => {\r\n            var match = headphone.regex.exec(this.props.message.message);\r\n            if (match) {\r\n               allTags.push({\r\n                  term: match[0],\r\n                  entry: { ...headphone.entry }\r\n               });\r\n            }\r\n         });\r\n         this.setState({ tags: allTags });\r\n      }\r\n   }\r\n\r\n   renderTags = () => {\r\n      if (!this.state.tags) {\r\n         return null;\r\n      }\r\n      return this.state.tags.map(tag => {\r\n         return (\r\n            //Add this headphone in the tag into the list of selected headphones when user clicks it\r\n            <div className=\"chat-message__tag\" key={tag.term} onClick={() => this.props.selectHeadphone(tag.entry)}>\r\n               {tag.term}\r\n            </div>\r\n         );\r\n      });\r\n   };\r\n   render() {\r\n      var {\r\n         message: { author, message, created }\r\n      } = this.props;\r\n      return (\r\n         <div className=\"chat-message\">\r\n            {/* Author */}\r\n            <h6\r\n               className=\"chat-message__author\"\r\n               onClick={() => (author.id ? history.push(`/user/${author.id}`) : null)}\r\n            >\r\n               {author.username}\r\n            </h6>\r\n            {/* Date */}\r\n            <Moment fromNow className=\"chat-message__date\">\r\n               {created}\r\n            </Moment>\r\n            {/* Message */}\r\n            <div className=\"chat-message__message\">{message}</div>\r\n            {/* Tags of headphones mentioned in the message */}\r\n            {this.renderTags()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   null,\r\n   { selectHeadphone }\r\n)(ChatMessage);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { addGlobalError } from '../../actions';\r\n\r\nclass ChatInput extends React.Component {\r\n   state = {\r\n      message: '',\r\n      //Randomly generate name for user\r\n      author: `Anonymous${Math.floor(Math.random() * (999 - 1)) + 1}`,\r\n      authorId: ''\r\n   };\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n      //Use Username as author if user is currently signed in\r\n      if (nextProps.currentUser && prevState.author.includes('Anonymous')) {\r\n         return { author: nextProps.currentUser.username, authorId: nextProps.currentUser.id };\r\n      }\r\n      return null;\r\n   }\r\n   postMessage = async () => {\r\n      //Format object to be posted to server\r\n      const postObj = {\r\n         message: this.state.message,\r\n         author: { username: this.state.author, id: this.state.authorId }\r\n      };\r\n      try {\r\n         //Post message to server\r\n         const response = await axios.post('/chat', postObj);\r\n         console.log(response.data);\r\n         // Empty stored message\r\n         this.setState({ message: '' }, () => {\r\n            //Invoke callback to refetch chat messages from server\r\n            this.props.fetchChatMessages();\r\n         });\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div className=\"chat-input\">\r\n            {/* Message */}\r\n            <div className=\"chat-input__fields\">\r\n               <textarea\r\n                  className=\"chat-input__message\"\r\n                  value={this.state.message}\r\n                  onChange={event => this.setState({ message: event.target.value })}\r\n                  onKeyPress={event => (event.key === 'Enter' ? this.postMessage() : null)}\r\n               />\r\n               {/* Author */}\r\n               <input\r\n                  className=\"chat-input__author\"\r\n                  type=\"text\"\r\n                  value={this.state.author}\r\n                  onChange={e => this.setState({ author: e.target.value })}\r\n               />\r\n               <i className=\"far fa-caret-square-right chat-input__button\" onClick={this.postMessage} />\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { addGlobalError }\r\n)(ChatInput);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { addGlobalError } from '../../actions';\r\nimport ChatMessage from './ChatMessage';\r\nimport ChatInput from './ChatInput';\r\nimport './LiveChat.css';\r\n\r\nclass LiveChat extends React.Component {\r\n   state = {\r\n      messages: null,\r\n      headphoneNamesWithRegex: null\r\n   };\r\n   componentDidMount() {\r\n      this.fetchChatMessages();\r\n      //Automatically refresh the livechat every 5 seconds\r\n      this.intervalId = setInterval(() => this.fetchChatMessages(), 5000);\r\n   }\r\n   componentWillUnmount() {\r\n      clearInterval(this.intervalId);\r\n   }\r\n   componentDidUpdate() {\r\n      if (this.props.headphones && !this.state.headphoneNamesWithRegex) {\r\n         this.convertHeadphoneNamesToRegex();\r\n      }\r\n      return null;\r\n   }\r\n\r\n   //Fetch the latest chat messages from the database\r\n   fetchChatMessages = async () => {\r\n      try {\r\n         const response = await axios.get('/chat');\r\n         this.setState({ messages: response.data });\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n   renderChatMessages() {\r\n      var { messages } = this.state;\r\n      if (!messages) {\r\n         return null;\r\n      }\r\n      //Reverse the array order such that the newest message is at the bottom\r\n      messages.reverse();\r\n      return messages.map(message => (\r\n         <ChatMessage\r\n            key={message._id}\r\n            message={message}\r\n            //Pass headphone names and their respective regex down to ChatMessage component\r\n            headphoneNamesWithRegex={this.state.headphoneNamesWithRegex ? this.state.headphoneNamesWithRegex : null}\r\n         />\r\n      ));\r\n   }\r\n   convertHeadphoneNamesToRegex() {\r\n      if (!this.props.headphones) {\r\n         return null;\r\n      }\r\n      var headphoneNamesWithRegex = this.props.headphones.map(headphone => {\r\n         //Formulating Regular Expression\r\n         var model = headphone.model;\r\n         //Separate the alternative naming from model\r\n         var alternative = /\\((.*)\\)/.exec(model);\r\n         model = model.replace(/\\s\\(.*\\)/g, '');\r\n         model = model.replace(/(-|\\s)/g, '');\r\n         //Phrase matches if it contains all of the words from the model, regardless of the whitespaces in between\r\n         var allModelWords = model.split('').join('.?');\r\n         //Phrase also matches if it contains the exact string from the model or alternative naming\r\n         if (alternative) {\r\n            var requirement = `(${allModelWords}|${alternative[1]})`;\r\n         } else {\r\n            var requirement2 = `(${allModelWords})`;\r\n         }\r\n         //Churn out the regular expression and flag it to be case insensitive\r\n         var regExp = new RegExp(requirement ? requirement : requirement2, 'i');\r\n         return { regex: regExp, entry: headphone };\r\n      });\r\n      console.log(headphoneNamesWithRegex);\r\n      this.setState({ headphoneNamesWithRegex });\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"live-chat\">\r\n            <div className=\"live-chat__title\">LIVE CHAT</div>\r\n            {this.renderChatMessages()}\r\n            {/* Pass callback as a prop to ChatInput so that it can invoke fetchChatMessages after user posts a chat message */}\r\n            <ChatInput fetchChatMessages={this.fetchChatMessages} />\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { headphones: state.listOfHeadphones };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { addGlobalError }\r\n)(LiveChat);\r\n","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport HeadphoneList from './HeadphoneList';\r\nimport SelectedList from './SelectedList';\r\nimport LiveChat from '../LiveChat/LiveChat';\r\nimport './Arena.css';\r\n\r\nconst Arena = () => {\r\n   return (\r\n      <div className=\"arena\">\r\n         <div className=\"arena__horizontal-line\" />\r\n         <HeadphoneList />\r\n         <SelectedList />\r\n         <LiveChat />\r\n         <div className=\"arena__nav-bar-line\" />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Arena;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { addGlobalError } from '../../actions';\r\n\r\nimport history from '../../history';\r\nimport './HeadphoneCreate.css';\r\n\r\nclass HeadphoneCreate extends React.Component {\r\n   state = {\r\n      brand: '',\r\n      model: '',\r\n      officialDescription: '',\r\n      impedance: '',\r\n      connector: '',\r\n      portability: '',\r\n      color: '',\r\n      cable: '',\r\n      driver: '',\r\n      sensitivity: '',\r\n      frequencyResponse: '',\r\n      classification: '',\r\n      maximumPower: '',\r\n      weight: '',\r\n      inTheBox: '',\r\n      image: '',\r\n      amazonLink: '',\r\n      price: ''\r\n   };\r\n\r\n   onFormSubmit = event => {\r\n      event.preventDefault();\r\n      //Post form to server\r\n      this.postToServer();\r\n   };\r\n\r\n   postToServer = async () => {\r\n      //Format object to be posted to the server\r\n      const {\r\n         brand,\r\n         model,\r\n         officialDescription,\r\n         impedance,\r\n         connector,\r\n         portability,\r\n         color,\r\n         cable,\r\n         driver,\r\n         sensitivity,\r\n         frequencyResponse,\r\n         classification,\r\n         maximumPower,\r\n         weight,\r\n         inTheBox,\r\n         image,\r\n         amazonLink,\r\n         price\r\n      } = this.state;\r\n      const postObj = {\r\n         brand,\r\n         model,\r\n         brandAndModel: `${brand} ${model}`,\r\n         officialDescription,\r\n         specification: {\r\n            impedance,\r\n            connector,\r\n            portability,\r\n            color,\r\n            cable,\r\n            driver,\r\n            sensitivity,\r\n            frequencyResponse,\r\n            classification,\r\n            maximumPower,\r\n            weight,\r\n            inTheBox\r\n         },\r\n         image,\r\n         amazonLink,\r\n         price\r\n      };\r\n      try {\r\n         const response = await axios.post('/headphones', postObj);\r\n         console.log(response);\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n   //This function maps every input field(State keys) we have into JSX - so that we don't have to do it one by one\r\n   //Not sure about the performance though...\r\n   mapStateKeysToJSX() {\r\n      var allInputs = [];\r\n      for (var key in this.state) {\r\n         if (key !== 'officialDescription') {\r\n            allInputs.push(\r\n               <div key={key} className=\"headphone-create__field\">\r\n                  <label className=\"headphone-create__label\">{key.toUpperCase()}</label>\r\n                  <input\r\n                     className=\"headphone-create__input\"\r\n                     type=\"text\"\r\n                     name={key}\r\n                     value={this.state[key]}\r\n                     onChange={e => this.setState({ [e.target.name]: e.target.value })}\r\n                  />\r\n                  <div className=\"headphone-create__full-stop\" />\r\n               </div>\r\n            );\r\n         } else {\r\n            allInputs.push(\r\n               <div key={key} className=\"headphone-create__field\">\r\n                  <label className=\"headphone-create__label\">{key.toUpperCase()}</label>\r\n                  <textarea\r\n                     className=\"headphone-create__input\"\r\n                     name={key}\r\n                     value={this.state[key]}\r\n                     onChange={e => this.setState({ [e.target.name]: e.target.value })}\r\n                  />\r\n                  <div className=\"headphone-create__full-stop\" />\r\n               </div>\r\n            );\r\n         }\r\n      }\r\n      return allInputs;\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"headphone-create\">\r\n            <div className=\"headphone-create__background\" />\r\n            <div className=\"headphone-create__content\">\r\n               <h1 className=\"headphone-create__page-name\">CREATE A NEW HEADPHONE</h1>\r\n               <form>\r\n                  <div className=\"headphone-create__buttons\">\r\n                     {/* Edit button */}\r\n                     <div className=\"headphone-create__edit-button\" onClick={() => history.push('/headphones/edit')}>\r\n                        EDIT\r\n                     </div>\r\n                     {/* Submit button */}\r\n                     <div className=\"headphone-create__submit-button\" onClick={this.onFormSubmit}>\r\n                        UPLOAD HEADPHONE\r\n                     </div>\r\n                  </div>\r\n\r\n                  {/* All the input fields */}\r\n                  {this.mapStateKeysToJSX()}\r\n               </form>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   null,\r\n   { addGlobalError }\r\n)(HeadphoneCreate);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { addGlobalError } from '../../actions';\r\nimport history from '../../history';\r\n\r\nclass HeadphoneDelete extends React.Component {\r\n   state = {\r\n      confirmationIsActive: false\r\n   };\r\n\r\n   delete = async () => {\r\n      try {\r\n         const response = await axios.delete(`/headphones/${this.props.id}`);\r\n         console.log(response.data);\r\n         history.push('/headphones/new');\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n\r\n   confirmation() {\r\n      if (!this.state.confirmationIsActive) {\r\n         return null;\r\n      }\r\n      return (\r\n         <div className=\"delete-confirmation\">\r\n            <div className=\"delete-confirmation__box\">\r\n               <h5>Are you sure you want to delete this Headphone Entry?</h5>\r\n               <div className=\"delete-confirmation__box-buttons\">\r\n                  <div onClick={this.delete}>Accept</div>\r\n                  <div onClick={() => this.setState({ confirmationIsActive: false })}>Oopsie, go back</div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className=\"headphone-delete__button\" onClick={() => this.setState({ confirmationIsActive: true })}>\r\n               Delete\r\n            </div>\r\n            {this.confirmation()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default connect(\r\n   null,\r\n   { addGlobalError }\r\n)(HeadphoneDelete);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { addGlobalError } from '../../actions';\r\nimport HeadphoneDelete from './HeadphoneDelete';\r\nimport './HeadphoneEdit.css';\r\n\r\nclass HeadphoneEdit extends React.Component {\r\n   state = {\r\n      _id: '',\r\n      brand: '',\r\n      model: '',\r\n      officialDescription: '',\r\n      impedance: '',\r\n      connector: '',\r\n      portability: '',\r\n      color: '',\r\n      cable: '',\r\n      driver: '',\r\n      sensitivity: '',\r\n      frequencyResponse: '',\r\n      classification: '',\r\n      maximumPower: '',\r\n      weight: '',\r\n      inTheBox: '',\r\n      image: '',\r\n      amazonLink: '',\r\n      price: ''\r\n   };\r\n   //Render a list of existing headphones' names to select which headphone needs updating\r\n   renderExistingNames() {\r\n      if (!this.props.listOfHeadphones) {\r\n         return null;\r\n      }\r\n      return this.props.listOfHeadphones.map(headphone => (\r\n         <span\r\n            key={headphone._id}\r\n            className=\"headphone-edit__existing-name\"\r\n            onClick={() => this.fetchHeadphoneEntry(headphone._id)}\r\n         >\r\n            {headphone.brandAndModel}\r\n         </span>\r\n      ));\r\n   }\r\n   //Fetch the full headphone entry based on the headphone name clicked\r\n   fetchHeadphoneEntry = async id => {\r\n      try {\r\n         const response = await axios.get(`/headphones/${id}`);\r\n         //Destructuring from fetched entry\r\n         const { _id, brand, model, image, officialDescription, amazonLink, price, specification } = response.data;\r\n         //Update state with the existing headphone data\r\n         this.setState({\r\n            _id,\r\n            brand,\r\n            model,\r\n            officialDescription,\r\n            ...specification,\r\n            image,\r\n            amazonLink,\r\n            price\r\n         });\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n   //This function maps every input field(State keys) we have into JSX - so that we don't have to do it one by one\r\n   //Not sure about the performance though...\r\n   mapStateKeysToJSX() {\r\n      var allInputs = [];\r\n      for (var key in this.state) {\r\n         if (key !== '_id') {\r\n            if (key !== 'officialDescription') {\r\n               allInputs.push(\r\n                  <div key={key} className=\"headphone-edit__field\">\r\n                     <label className=\"headphone-edit__label\">{key}</label>\r\n                     <input\r\n                        className=\"headphone-edit__input\"\r\n                        type=\"text\"\r\n                        name={key}\r\n                        value={this.state[key]}\r\n                        onChange={e => this.setState({ [e.target.name]: e.target.value })}\r\n                     />\r\n                     <div className=\"headphone-edit__full-stop\" />\r\n                  </div>\r\n               );\r\n            } else {\r\n               allInputs.push(\r\n                  <div key={key} className=\"headphone-edit__field\">\r\n                     <label className=\"headphone-edit__label\">{key}</label>\r\n                     <textarea\r\n                        className=\"headphone-edit__input\"\r\n                        name={key}\r\n                        value={this.state[key]}\r\n                        onChange={e => this.setState({ [e.target.name]: e.target.value })}\r\n                     />\r\n                     <div className=\"headphone-edit__full-stop\" />\r\n                  </div>\r\n               );\r\n            }\r\n         }\r\n      }\r\n      return allInputs;\r\n   }\r\n   onFormSubmit = event => {\r\n      event.preventDefault();\r\n      //Update form to database\r\n      this.updateDatabase();\r\n   };\r\n\r\n   updateDatabase = async () => {\r\n      //Format object to be updated to the database\r\n      const updateObj = {\r\n         brand: this.state.brand,\r\n         model: this.state.model,\r\n         brandAndModel: `${this.state.brand} ${this.state.model}`,\r\n         officialDescription: this.state.officialDescription,\r\n         specification: {\r\n            impedance: this.state.impedance,\r\n            connector: this.state.connector,\r\n            portability: this.state.portability,\r\n            color: this.state.color,\r\n            cable: this.state.cable,\r\n            driver: this.state.driver,\r\n            sensitivity: this.state.sensitivity,\r\n            frequencyResponse: this.state.frequencyResponse,\r\n            classification: this.state.classification,\r\n            maximumPower: this.state.maximumPower,\r\n            weight: this.state.weight,\r\n            inTheBox: this.state.inTheBox\r\n         },\r\n         image: this.state.image,\r\n         amazonLink: this.state.amazonLink,\r\n         price: this.state.price\r\n      };\r\n      //Update form to database\r\n      try {\r\n         const response = await axios.put(`/headphones/${this.state._id}`, updateObj);\r\n         console.log(response.data);\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n   renderDeleteButton() {\r\n      return this.state._id ? <HeadphoneDelete id={this.state._id} /> : null;\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"headphone-edit\">\r\n            <div className=\"headphone-edit__background\" />\r\n            <div className=\"headphone-edit__content\">\r\n               <h1 className=\"headphone-edit__page-name\">EDIT HEADPHONE</h1>\r\n               {/* List of Existing Headphones */}\r\n               <div className=\"headphone-edit__existing-headphones\">{this.renderExistingNames()}</div>\r\n               <form>\r\n                  {/* All the input fields */}\r\n                  {this.mapStateKeysToJSX()}\r\n                  <div className=\"headphone-edit__buttons\">\r\n                     {/* Delete button */}\r\n                     {this.renderDeleteButton()}\r\n                     {/* Submit button */}\r\n                     <div className=\"headphone-edit__submit-button\" onClick={this.onFormSubmit}>\r\n                        UPDATE HEADPHONE\r\n                     </div>\r\n                  </div>\r\n               </form>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return { listOfHeadphones: state.listOfHeadphones };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { addGlobalError }\r\n)(HeadphoneEdit);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { redirectToMainPost } from '../../actions';\r\n\r\nclass ForumCategory extends React.Component {\r\n   renderCategoryPosts = () => {\r\n      var { category, posts } = this.props;\r\n      if (!posts) {\r\n         return null;\r\n      }\r\n      if (category === 'review' || category === 'general') {\r\n         posts = posts.slice(0, posts.length - 1);\r\n      }\r\n      return posts.map(post => (\r\n         // If user clicks on the title of this post, redirect to this post's show page\r\n         <div key={post._id} className=\"forum-category__post\" onClick={() => this.props.redirectToMainPost(post)}>\r\n            <div className=\"forum-category__post-container\">\r\n               <h4 className=\"forum-category__post-title\">{post.title}</h4>\r\n               <p className=\"forum-category__post-content\">{`${post.content.substring(\r\n                  0,\r\n                  260 - post.title.length\r\n               )}...`}</p>\r\n            </div>\r\n            <div className=\"forum-category__post-metadata\">\r\n               <Moment fromNow className=\"forum-category__post-date\">\r\n                  {post.created}\r\n               </Moment>\r\n               <div className=\"forum-category__post-vote\">\r\n                  {this.manageVoteIcon(post)}\r\n                  {post.vote.count}\r\n               </div>\r\n            </div>\r\n         </div>\r\n      ));\r\n   };\r\n   manageVoteIcon(post) {\r\n      return post.vote.count >= 0 ? (\r\n         <i className=\"fas fa-angle-up forum-category__post-vote-icon\" />\r\n      ) : (\r\n         <i className=\"fas fa-angle-down forum-category__post-vote-icon\" />\r\n      );\r\n   }\r\n   render() {\r\n      var { category, searchActive } = this.props;\r\n      if (searchActive) {\r\n         return <div />;\r\n      }\r\n      return (\r\n         <div className={`forum-category forum-category-${category}`}>\r\n            {/* Latest and Hottest posts under this category */}\r\n            {this.renderCategoryPosts()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   null,\r\n   { redirectToMainPost }\r\n)(ForumCategory);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchSearchPosts } from '../../actions';\r\n\r\nclass ForumSearch extends React.Component {\r\n   onSearchInputChange = e => {\r\n      this.props.fetchSearchPosts(e.target.value);\r\n   };\r\n   manageSearchStyle(element) {\r\n      const { searchTerm } = this.props;\r\n      if (!searchTerm) {\r\n         return null;\r\n      }\r\n      switch (element) {\r\n         case 'box':\r\n            return { backgroundColor: '#c00603' };\r\n         case 'icon':\r\n            return { display: 'none' };\r\n         case 'input':\r\n            return { borderColor: '#c00603' };\r\n         default:\r\n            return null;\r\n      }\r\n   }\r\n   render() {\r\n      var { searchTerm } = this.props;\r\n      return (\r\n         <div className=\"forum-search\">\r\n            <i className=\"fas fa-search forum-search__icon\" style={this.manageSearchStyle('icon')} />\r\n            <input\r\n               type=\"text\"\r\n               className=\"forum-search__input\"\r\n               value={searchTerm}\r\n               onChange={this.onSearchInputChange}\r\n               style={this.manageSearchStyle('input')}\r\n            />\r\n            <div className=\"forum-search__box\" style={this.manageSearchStyle('box')} />\r\n            <div className=\"forum-search__box\" style={this.manageSearchStyle('box')} />\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { searchTerm: state.forumSearchTerm };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchSearchPosts }\r\n)(ForumSearch);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport history from '../../history';\r\n\r\nclass ForumSearchPosts extends React.Component {\r\n   renderSearchPosts() {\r\n      var { searchPosts } = this.props;\r\n      return searchPosts.map(post => (\r\n         // If user clicks on this post, redirect to this post's show page\r\n         <div key={post._id} className=\"forum-search__post\" onClick={() => history.push(`/posts/${post._id}`)}>\r\n            <div className=\"forum-search__post-container\">\r\n               {/* Title */}\r\n               <h4 className=\"forum-search__post-title\">{post.title}</h4>\r\n               {/* Content */}\r\n               <p className=\"forum-search__post-content\">{`${post.content.substring(0, 100)}...`}</p>\r\n            </div>\r\n            <div className=\"forum-search__post-metadata\">\r\n               {/* Date */}\r\n               <Moment fromNow className=\"forum-search__post-date\">\r\n                  {post.created}\r\n               </Moment>\r\n               <div>\r\n                  {/* Number of votes */}\r\n                  <span className=\"forum-search__post-vote\">\r\n                     {this.manageVoteIcon(post)}\r\n                     {post.vote.count}\r\n                  </span>\r\n                  {/* Number of replies */}\r\n                  <span>\r\n                     <i className=\"far fa-comment-alt forum-search__post-reply-icon\" />\r\n                     {post.totalReplies}\r\n                  </span>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      ));\r\n   }\r\n   manageVoteIcon(post) {\r\n      return post.vote.count >= 0 ? (\r\n         <i className=\"fas fa-angle-up forum-search__post-vote-icon\" />\r\n      ) : (\r\n         <i className=\"fas fa-angle-down forum-search__post-vote-icon\" />\r\n      );\r\n   }\r\n   render() {\r\n      var { searchPosts, searchActive } = this.props;\r\n      if (!searchActive || !searchPosts) {\r\n         return <div />;\r\n      }\r\n      return <div className=\"forum-search-posts\">{this.renderSearchPosts()}</div>;\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return { searchPosts: state.forumSearchPosts };\r\n};\r\nexport default connect(mapStateToProps)(ForumSearchPosts);\r\n","import React from 'react';\r\n\r\nconst manageNameDisplay = searchTerm => {\r\n   return searchTerm ? { display: 'none' } : null;\r\n};\r\nconst ForumStyling = ({ searchTerm }) => {\r\n   return (\r\n      <div className=\"forum-styling\">\r\n         <div className=\"forum__category-names\">\r\n            <h2>COMPARISON</h2>\r\n            <h2>REVIEW</h2>\r\n            <h2>GENERAL</h2>\r\n            <h2>RECOMMENDATION</h2>\r\n         </div>\r\n         <div className=\"forum__nav-bar-line\" />\r\n         <div className=\"forum__horizontal-lines\" />\r\n         <div className=\"forum__name forum__name--comparison\" style={manageNameDisplay(searchTerm)}>\r\n            <h5>COMPARISON</h5>\r\n         </div>\r\n         <div className=\"forum__name forum__name--recommendation\" style={manageNameDisplay(searchTerm)}>\r\n            <h5>RECOMMENDATION</h5>\r\n         </div>\r\n         <div className=\"forum__name forum__name--review\" style={manageNameDisplay(searchTerm)}>\r\n            <h5>REVIEW</h5>\r\n         </div>\r\n         <div className=\"forum__name forum__name--general\" style={manageNameDisplay(searchTerm)}>\r\n            <h5>GENERAL</h5>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default ForumStyling;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport history from '../../history';\r\nimport { fetchForumHomePosts } from '../../actions';\r\nimport ForumCategory from './ForumCategory';\r\nimport ForumSearch from './ForumSearch';\r\nimport ForumSearchPosts from './ForumSearchPosts';\r\nimport LiveChat from '../LiveChat/LiveChat';\r\nimport ForumStyling from './ForumStyling';\r\nimport './Forum.css';\r\n\r\nclass Forum extends React.Component {\r\n   componentDidMount() {\r\n      this.props.fetchForumHomePosts();\r\n   }\r\n   render() {\r\n      if (!this.props.forumPosts) {\r\n         return <div />;\r\n      }\r\n      var {\r\n         forumPosts: { comparison, recommendation, review, general },\r\n         searchTerm\r\n      } = this.props;\r\n      return (\r\n         <div className=\"forum\">\r\n            <div className=\"forum-contents\">\r\n               {/* Page Title */}\r\n               <h1 className=\"forum-contents__page-title\">FORUM</h1>\r\n               {/* Comparison category */}\r\n               <ForumCategory posts={comparison} category={'comparison'} searchActive={searchTerm} />\r\n               {/* Searchbar */}\r\n               <ForumSearch />\r\n               {/* Search results */}\r\n               {/* Turn ON this component if user is using the searchbar */}\r\n               <ForumSearchPosts searchActive={searchTerm} />\r\n               {/* Review category */}\r\n               {/* Turn OFF this component if user is using the searchbar */}\r\n               <ForumCategory posts={review} category={'review'} searchActive={searchTerm} />\r\n               {/* General category */}\r\n               {/* Turn OFF this component if user is using the searchbar */}\r\n               <ForumCategory posts={general} category={'general'} searchActive={searchTerm} />\r\n\r\n               {/* Budget Recommendation category */}\r\n               <ForumCategory posts={recommendation} category={'recommendation'} searchActive={searchTerm} />\r\n               {/* Category names */}\r\n               <ForumStyling searchTerm={searchTerm} />\r\n               <LiveChat />\r\n            </div>\r\n            {/* Button to redirect to PostCreate */}\r\n            <div className=\"forum__add-post-button\" onClick={() => history.push('/posts/new')}>\r\n               +\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { forumPosts: state.forumPosts, searchTerm: state.forumSearchTerm };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchForumHomePosts }\r\n)(Forum);\r\n","export default [\r\n   {\r\n      criteria: 'Comfort',\r\n      tags: [\r\n         'tight clamp',\r\n         'comfort-king',\r\n         'sweaty ears',\r\n         'crown pain',\r\n         'jaw pain',\r\n         'too-loose',\r\n         'soft',\r\n         'rough',\r\n         'small cups',\r\n         'fatiguing',\r\n         'more like on-ears'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Sound Signature',\r\n      tags: [\r\n         'treble-murder',\r\n         'aggressive',\r\n         'fun',\r\n         'V-shaped',\r\n         'warm',\r\n         'bright',\r\n         'neutral',\r\n         'dark',\r\n         'mid',\r\n         'weird dips',\r\n         'flat',\r\n         'distorted',\r\n         'need equalizing'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Bass',\r\n      tags: [\r\n         'muddy bass',\r\n         'aggressive bass',\r\n         'punchy bass',\r\n         'adequate bass',\r\n         'not overwhelming bass',\r\n         'fatiguing bass',\r\n         'rumbling bass',\r\n         'deep bass',\r\n         'boomy bass',\r\n         'emphasized bass'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Mid-range',\r\n      tags: [\r\n         'in your face mids',\r\n         'forward mids',\r\n         'recessed mids',\r\n         'glorious mids',\r\n         'flat mids',\r\n         'thin mids',\r\n         'well-balanced mids',\r\n         'adequate but not emphasized mids',\r\n         'missing mids'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Highs',\r\n      tags: [\r\n         'airy and light highs',\r\n         'shrill highs',\r\n         'in your face highs',\r\n         'fatiguing highs',\r\n         'headache inducing highs',\r\n         'too much sibilance highs',\r\n         'bright highs',\r\n         'satisfying highs'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Aesthetic',\r\n      tags: [\r\n         'style-cans',\r\n         'fashionable',\r\n         'retro',\r\n         'chunky',\r\n         'unchanged since the eighties',\r\n         'modern',\r\n         'awkward-looking',\r\n         'attention-seeking',\r\n         'discrete',\r\n         'simplistic'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Build',\r\n      tags: [\r\n         'shoddy',\r\n         'loose parts',\r\n         'a tank',\r\n         'falls-survivor',\r\n         'cheap',\r\n         'exquisite materials',\r\n         '99% metal',\r\n         'will not survive daily transportation',\r\n         'squeaky',\r\n         'last a lifetime'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Isolation',\r\n      tags: [\r\n         'mild leakage',\r\n         'cannot hear my wife screaming',\r\n         'i hear things at night',\r\n         'practically non-existent',\r\n         'good for office use'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Portability',\r\n      tags: [\r\n         'bulky',\r\n         'no case',\r\n         'no swivel or folding',\r\n         'compact',\r\n         'not for outdoors',\r\n         'perfect for public commune',\r\n         'useful case',\r\n         'sufficient protection'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Sound Stage',\r\n      tags: [\r\n         'spacious',\r\n         'wide',\r\n         'narrow',\r\n         'as narrow as a pencil',\r\n         'movie-theatre level',\r\n         'I thought I was in the music',\r\n         'wider than it looks',\r\n         'things are coming at me in all directions',\r\n         'stereo'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Imaging',\r\n      tags: [\r\n         'accurate',\r\n         'detailed',\r\n         'clarity',\r\n         'muddy',\r\n         'I can hear pin drop',\r\n         'distinctive layers',\r\n         'harmonious',\r\n         'sounds like real instruments',\r\n         'unnatural'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Power',\r\n      tags: [\r\n         'need amplifier',\r\n         'suitable for phones',\r\n         'need decent DAP',\r\n         'need some serious juice',\r\n         'need dedicated equipments'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Price',\r\n      tags: [\r\n         'bang for the bang',\r\n         'over-priced',\r\n         'take my kidney',\r\n         'cheaper substitutes',\r\n         'frequently on discount',\r\n         'cheaper elsewhere',\r\n         'budget-king',\r\n         'premium',\r\n         'can compete with high-ends',\r\n         'suitably-priced'\r\n      ]\r\n   },\r\n   {\r\n      criteria: 'Purpose',\r\n      tags: [\r\n         'open',\r\n         'closed-back',\r\n         'semi-closed',\r\n         'good for gaming',\r\n         'monitoring headphones',\r\n         'critical listening',\r\n         'chill and unwind',\r\n         'for watching movies'\r\n      ]\r\n   }\r\n];\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TagLibrary from './TagLibrary';\r\nimport './TagSystem.css';\r\n\r\nclass TagSystem extends React.Component {\r\n   state = {\r\n      searchTerm: '',\r\n      searchMatches: [],\r\n      taggedHeadphones: [],\r\n      selectedTagLine: '',\r\n      selectedCriteria: '',\r\n      outputTags: [],\r\n      id: ''\r\n   };\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n      if (!nextProps.previousTags || nextProps.id === prevState.id) {\r\n         return null;\r\n      }\r\n      //Load up previous tags (one time) if editing and updating post\r\n      //If there is zero previous tags\r\n      if (nextProps.previousTags.length === 0) {\r\n         return { id: nextProps.id, taggedHeadphones: [], outputTags: [], selectedTagLine: '' };\r\n      }\r\n      //If there are previous tags\r\n      //DO NOT REFERENCE ARRAY FROM PROPS\r\n      var notReferencedArr = nextProps.previousTags.map(entry => {\r\n         return { brandAndModel: entry.brandAndModel, tags: [...entry.tags] };\r\n      });\r\n      var taggedHeadphones = nextProps.previousTags.map(entry => entry.brandAndModel);\r\n      return { taggedHeadphones, outputTags: notReferencedArr, id: nextProps.id, selectedTagLine: '' };\r\n   }\r\n   componentDidUpdate() {\r\n      //Invoke callback to send all tag entries back to the parent component (PostCreate/ReplyCreate/PostEdit) to be posted to server\r\n      this.props.compileTags(this.state.outputTags);\r\n   }\r\n   //Invoked as user types in the search box\r\n   onHeadphoneSearchInput = e => {\r\n      this.setState({ searchTerm: e.target.value });\r\n      if (e.target.value.length === 0) {\r\n         this.setState({ searchMatches: [] });\r\n      } else {\r\n         this.searchForHeadphones(e.target.value);\r\n      }\r\n   };\r\n   //Search for headphones using the inputted search term\r\n   searchForHeadphones = searchTerm => {\r\n      //Remove spaces from search term inputted by the user\r\n      var removeSpace = searchTerm.replace(/\\s/g, '');\r\n\r\n      //Preparing the search term to be converted to regular expression\r\n      //Giving allowance for stray spaces and stray letters (i.e just check whether the headphone's name contains every letter from the search term)\r\n      var regExpPrepare = removeSpace.split('').join('.*');\r\n\r\n      //Convert to regular expression\r\n      var regExp = new RegExp(regExpPrepare, 'i');\r\n\r\n      //Find headphones whose name contains every letter in the search term\r\n      var searchMatches = this.props.listOfHeadphones.filter(headphone => {\r\n         return regExp.test(headphone.brandAndModel);\r\n      });\r\n\r\n      //Don't want to show already tagged headphones\r\n      if (this.state.taggedHeadphones.length > 0) {\r\n         searchMatches = searchMatches.filter(currentMatch => {\r\n            return !this.state.taggedHeadphones.includes(currentMatch.brandAndModel);\r\n         });\r\n      }\r\n      searchMatches = searchMatches.slice(0, 4);\r\n      //Store the successful matches in the component's state\r\n      this.setState({ searchMatches });\r\n   };\r\n   renderSuggestionsFromMatches = () => {\r\n      //Render headphone suggestion buttons only if there are matches\r\n      return this.state.searchMatches.map(match => {\r\n         return (\r\n            <div\r\n               className=\"tag-system__searchMatch\"\r\n               key={match.brandAndModel}\r\n               onClick={() => this.addTaggedHeadphone(match.brandAndModel)}\r\n            >\r\n               {match.brandAndModel}\r\n            </div>\r\n         );\r\n      });\r\n   };\r\n   addTaggedHeadphone = headphoneName => {\r\n      this.setState({\r\n         taggedHeadphones: [...this.state.taggedHeadphones, headphoneName],\r\n         searchTerm: '',\r\n         searchMatches: []\r\n      });\r\n   };\r\n   removeTaggedHeadphone = removedHeadphoneName => {\r\n      var remainingTaggedHeadphones = this.state.taggedHeadphones.filter(\r\n         headphone => headphone !== removedHeadphoneName\r\n      );\r\n      var remainingEntries = this.state.outputTags.filter(entry => entry.brandAndModel !== removedHeadphoneName);\r\n      this.setState({ taggedHeadphones: remainingTaggedHeadphones, outputTags: remainingEntries });\r\n      if (this.state.selectedTagLine === removedHeadphoneName) {\r\n         this.setState({ selectedTagLine: '' });\r\n      }\r\n   };\r\n   renderTagLineFromTaggedHeadphones = () => {\r\n      //Display Tag Line only if there are tagged headphones\r\n      //Map each taggedHeadphone in a separate tag line\r\n      return this.state.taggedHeadphones.map(taggedHeadphoneName => {\r\n         return (\r\n            <div className=\"tag-system__tag-line\" key={taggedHeadphoneName}>\r\n               <div\r\n                  className=\"tag-system__tagged-headphone\"\r\n                  //Pass in this headphone name into callback when clicked\r\n                  onClick={() => this.selectTagLine(taggedHeadphoneName)}\r\n               >\r\n                  {taggedHeadphoneName} :{/* Display the tags */}\r\n                  <span className=\"tag-system__tags\">{this.renderTagsInEachTagLine(taggedHeadphoneName)}</span>\r\n               </div>\r\n               <i className=\"fas fa-times tag-system__remove-tag-line\" onClick={() => this.removeTaggedHeadphone(taggedHeadphoneName)} />\r\n            </div>\r\n         );\r\n      });\r\n   };\r\n   renderTagsInEachTagLine = taggedHeadphoneName => {\r\n      //Find all tags associated with this tagged headphone\r\n      var tagEntry = this.state.outputTags.find(entry => entry.brandAndModel === taggedHeadphoneName);\r\n      if (!tagEntry) {\r\n         return null;\r\n      }\r\n      return tagEntry.tags.map(tag => (\r\n         <span className=\"tag-system__tag\" key={tag}>\r\n            {tag}\r\n            <i className=\"fas fa-times tag-system__remove-tag\" onClick={() => this.removeTag(taggedHeadphoneName, tag)} />\r\n         </span>\r\n      ));\r\n   };\r\n   //Select which tag line is active\r\n   selectTagLine = taggedHeadphoneName => {\r\n      this.setState({ selectedTagLine: taggedHeadphoneName });\r\n   };\r\n   renderTaggingCriterias = () => {\r\n      //Formulate the tags from the TagLibrary object only if any tag line is active\r\n      if (!this.state.selectedTagLine) {\r\n         return null;\r\n      }\r\n      return TagLibrary.map(category => {\r\n         return (\r\n            <span key={category.criteria}>\r\n               <span onClick={() => this.setState({ selectedCriteria: category.criteria })}>{category.criteria}</span> |\r\n            </span>\r\n         );\r\n      });\r\n   };\r\n   renderSelectableTags = () => {\r\n      if (!this.state.selectedCriteria || !this.state.selectedTagLine) {\r\n         return null;\r\n      }\r\n      //Display all the tags for the currently selected criteria\r\n      var currentCriteria = TagLibrary.find(category => category.criteria === this.state.selectedCriteria);\r\n      return (\r\n         <div>\r\n            {currentCriteria.tags.map(tag => (\r\n               <span key={tag} onClick={() => this.addTag(tag)}>\r\n                  {tag}\r\n               </span>\r\n            ))}\r\n         </div>\r\n      );\r\n   };\r\n   // If user clicks on this tag, then add this tag to the state under the currently selected headphone's name\r\n   addTag = tag => {\r\n      //This should get the name of the headphone that is currently being tagged\r\n      var activeHeadphone = this.state.selectedTagLine;\r\n\r\n      //Find the entry from outputTags that contains the same headphone name as the activeHeadphone (if the entry exists)\r\n      var currentEntry = this.state.outputTags.find(entry => entry.brandAndModel === activeHeadphone);\r\n\r\n      //Form an array of other remaining entries\r\n      var remainingEntries = this.state.outputTags.filter(entry => entry.brandAndModel !== activeHeadphone);\r\n\r\n      //Make a new entry if the activeHeadphone has not been tagged before\r\n      if (!currentEntry) {\r\n         currentEntry = { brandAndModel: activeHeadphone, tags: [] };\r\n      }\r\n      //Check whether the tag already exist in the state for that particular headphone\r\n      if (!currentEntry.tags.includes(tag)) {\r\n         currentEntry.tags.push(tag);\r\n      }\r\n      //Save all the entries along with the updated tag back to the state\r\n      this.setState({ outputTags: [...remainingEntries, currentEntry] });\r\n   };\r\n\r\n   removeTag = (taggedHeadphoneName, tag) => {\r\n      //Find the entry from outputTags that contains the same headphone name as the one we are removing tag from\r\n      var currentEntry = this.state.outputTags.find(entry => entry.brandAndModel === taggedHeadphoneName);\r\n      //Form an array of other remaining entries\r\n      var remainingEntries = this.state.outputTags.filter(entry => entry.brandAndModel !== taggedHeadphoneName);\r\n      //Remove tag from current entry\r\n      currentEntry.tags = currentEntry.tags.filter(existingTag => existingTag !== tag);\r\n      //Save all the entries minus the removed tag back to the state\r\n      this.setState({ outputTags: [...remainingEntries, currentEntry] });\r\n   };\r\n   render() {\r\n      return (\r\n         <div className=\"tag-system\">\r\n            {/* Searchbox for headphones names */}\r\n            <input\r\n               className=\"tag-system__searchInput\"\r\n               type=\"text\"\r\n               value={this.state.searchTerm}\r\n               onChange={this.onHeadphoneSearchInput}\r\n            />\r\n            {/* Buttons representing successful search matches */}\r\n            {this.renderSuggestionsFromMatches()}\r\n            {/* One tag line for each tagged headphone */}\r\n            {this.renderTagLineFromTaggedHeadphones()}\r\n            {/* Tags from TagLibrary */}\r\n            {this.renderTaggingCriterias()}\r\n            {this.renderSelectableTags()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n//Get the name list of all headphones in the database\r\nconst mapStateToProps = state => {\r\n   return { listOfHeadphones: state.listOfHeadphones };\r\n};\r\nexport default connect(mapStateToProps)(TagSystem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { registerUser, addGlobalError } from '../../actions';\r\n\r\nclass Register extends React.Component {\r\n   state = {\r\n      username: '',\r\n      password: ''\r\n   };\r\n   onSubmitClick = e => {\r\n      e.preventDefault();\r\n      //Check required fields\r\n      if (!this.state.username || !this.state.password) {\r\n         this.props.addGlobalError('Both username and password are required');\r\n      } else {\r\n         //Register user\r\n         this.props.registerUser(this.state.username, this.state.password);\r\n         if (this.props.redirectIfDone) {\r\n            //Redirect back when done\r\n            this.props.redirectIfDone();\r\n         }\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div>\r\n            REGISTER\r\n            <form>\r\n               <label>Username</label>\r\n               <input\r\n                  type=\"text\"\r\n                  value={this.state.username}\r\n                  onChange={e => this.setState({ username: e.target.value })}\r\n               />\r\n               <label>Password</label>\r\n               <input\r\n                  type=\"text\"\r\n                  value={this.state.password}\r\n                  onChange={e => this.setState({ password: e.target.value })}\r\n               />\r\n               <input type=\"submit\" onClick={this.onSubmitClick} />\r\n            </form>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { registerUser, addGlobalError }\r\n)(Register);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport history from '../../history';\r\nimport { loginUser, addGlobalError } from '../../actions';\r\nimport Register from './Register';\r\nimport './Login.css';\r\nimport { isNull } from 'util';\r\n\r\nclass Login extends React.Component {\r\n   state = {\r\n      username: '',\r\n      password: '',\r\n      registerIsActive: false\r\n   };\r\n   onSubmitClick = e => {\r\n      e.preventDefault();\r\n      //Check required fields\r\n      if (!this.state.username || !this.state.password) {\r\n         this.props.addGlobalError('Both username and password are required!');\r\n      } else {\r\n         //Log user in\r\n         this.props.loginUser(this.state.username, this.state.password);\r\n         if (this.props.redirectIfDone) {\r\n            //Redirect back when done\r\n            history.goBack();\r\n         }\r\n      }\r\n   };\r\n   onRefuseClick = () => {\r\n      if (!this.props.turnOffLogin) {\r\n         history.goBack();\r\n      } else {\r\n         this.props.turnOffLogin();\r\n      }\r\n   };\r\n   renderRegister = () => {\r\n      if (!this.state.registerIsActive) {\r\n         return isNull;\r\n      }\r\n      return <Register />;\r\n   };\r\n   turnOffRegister = () => {\r\n      this.setState({ registerIsActive: true });\r\n   };\r\n   render() {\r\n      return (\r\n         <div className=\"login\">\r\n            <div className=\"login__contents\">\r\n               <form className=\"login__form\">\r\n                  <div className=\"login__form-page-title\"> LOG IN</div>\r\n                  <label className=\"login__form-label\">USERNAME</label>\r\n                  <input\r\n                     type=\"text\"\r\n                     className=\"login__form-input\"\r\n                     value={this.state.username}\r\n                     onChange={e => this.setState({ username: e.target.value })}\r\n                  />\r\n                  <label className=\"login__form-label\">PASSWORD</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     className=\"login__form-input\"\r\n                     value={this.state.password}\r\n                     onChange={e => this.setState({ password: e.target.value })}\r\n                  />\r\n                  <div className=\"login__form-button\" onClick={this.onSubmitClick}>\r\n                     LOG ME IN!\r\n                  </div>\r\n               </form>\r\n               <div className=\"login__alternatives\">\r\n                  <h6\r\n                     className=\"login__alternatives-register\"\r\n                     onClick={() => this.setState({ registerIsActive: true })}\r\n                  >\r\n                     But, I am not registered!\r\n                  </h6>\r\n                  <h6 className=\"login__alternatives-refuse\" onClick={this.onRefuseClick}>\r\n                     No Way! You can't make me!\r\n                  </h6>\r\n               </div>\r\n               <div className=\"login__continuous-line\" />\r\n               <div className=\"login__vertical-line\" />\r\n               <div className=\"login__vertical-line-2\" />\r\n            </div>\r\n            {this.renderRegister()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { loginUser, addGlobalError }\r\n)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport TagSystem from './TagSystem';\r\nimport Login from '../Authentication/Login';\r\nimport { fetchPost, addGlobalError } from '../../actions';\r\n\r\nclass ReplyCreate extends React.Component {\r\n   state = {\r\n      idToReplyTo: '',\r\n      title: '',\r\n      category: '',\r\n      outputTags: [],\r\n      content: ''\r\n   };\r\n\r\n   componentDidUpdate() {\r\n      // Store the parent post's details in the state\r\n      if (!this.state.idToReplyTo) {\r\n         const { idToReplyTo, title, category } = this.props;\r\n         this.setState({ idToReplyTo, title, category });\r\n      }\r\n   }\r\n   //Callback passed as props to child component TagSystem\r\n   retrieveTagsFromTagSystem = outputTags => {\r\n      this.setState({ outputTags });\r\n   };\r\n   onFormSubmit = event => {\r\n      event.preventDefault();\r\n      //Check authentication\r\n      if (this.props.currentUser) {\r\n         //Check for required fields\r\n         if (!this.state.content) {\r\n            this.props.addGlobalError('Please fill in some content for your reply at least...');\r\n         } else {\r\n            //Post new post form to server\r\n            this.postToServer();\r\n         }\r\n      }\r\n   };\r\n\r\n   postToServer = async () => {\r\n      //Format object to be posted to the database\r\n      var replyObj = {\r\n         idToReplyTo: this.state.idToReplyTo,\r\n         body: {\r\n            isMainPost: false,\r\n            title: this.state.title,\r\n            tag: this.state.outputTags,\r\n            content: this.state.content,\r\n            category: this.state.category\r\n         }\r\n      };\r\n      try {\r\n         //Create post in database\r\n         const response = await axios.post('/posts', replyObj);\r\n         console.log(response);\r\n         //Add new tags to newly tagged headphones\r\n         if (replyObj.body.tag.length > 0) {\r\n            const response2 = await axios.put(`/posts/${response.data._id}/addtags`, replyObj);\r\n            console.log(response2);\r\n         }\r\n         //Refetch post thread data\r\n         this.props.fetchPost(this.props.mainPostId);\r\n         //Turn off this interface afterwards\r\n         this.props.turnOffReplyCreate();\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n   //Display message to remind user to log in before creating a new post\r\n   askLogin() {\r\n      if (!this.props.currentUser) {\r\n         return <Login turnOffLogin={this.props.turnOffReplyCreate} />;\r\n      }\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"reply-create\">\r\n            <form>\r\n               {/* Tagging Mechanism */}\r\n               <TagSystem compileTags={this.retrieveTagsFromTagSystem} />\r\n               {/* Post Contents */}\r\n               <textarea\r\n                  className=\"reply-create__content\"\r\n                  onChange={e => this.setState({ content: e.target.value })}\r\n                  value={this.state.content}\r\n                  placeholder=\"Share your thoughts with your fellow Audiophiles ...\"\r\n               />\r\n               <div className=\"reply-create__buttons\">\r\n                  <div className=\"reply-create__submit-button\" onClick={this.onFormSubmit}>\r\n                     REPLY\r\n                  </div>\r\n                  <div className=\"reply-create__refuse-button\" onClick={this.props.turnOffReplyCreate}>\r\n                     OOPS!\r\n                  </div>\r\n               </div>\r\n            </form>\r\n            {this.askLogin()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchPost, addGlobalError }\r\n)(ReplyCreate);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updatePost } from '../../actions';\r\nimport Login from '../Authentication/Login';\r\n\r\nclass Vote extends React.Component {\r\n   state = {\r\n      askLogin: false\r\n   };\r\n   onVoteClick = voteNature => {\r\n      var { currentUser, vote } = this.props;\r\n      //Allow voting only if user is logged in\r\n      if (!currentUser) {\r\n         this.setState({ askLogin: true });\r\n      } else {\r\n         //Create variables by making a deep copy of the original vote object, no referencing!\r\n         var count = vote.count;\r\n         var upVote = [...vote.upVote];\r\n         var downVote = [...vote.downVote];\r\n\r\n         if (voteNature === 'upvote') {\r\n            if (upVote.includes(currentUser.id)) {\r\n               //User upvoted previously, now wants to remove vote\r\n               count--;\r\n               upVote = upVote.filter(id => id !== currentUser.id);\r\n            } else if (downVote.includes(currentUser.id)) {\r\n               //User down-voted previously, now wants to switch to upvote\r\n               count += 2;\r\n               downVote = downVote.filter(id => id !== currentUser.id);\r\n               upVote = [...upVote, currentUser.id];\r\n            } else {\r\n               //No previous record, new upvote\r\n               count++;\r\n               upVote = [...upVote, currentUser.id];\r\n            }\r\n         } else if (voteNature === 'downvote') {\r\n            if (downVote.includes(currentUser.id)) {\r\n               //User down-voted previously, now wants to remove vote\r\n               count++;\r\n               downVote = downVote.filter(id => id !== currentUser.id);\r\n            } else if (upVote.includes(currentUser.id)) {\r\n               //User upvoted previously, now wants to switch to downvote\r\n               count -= 2;\r\n               upVote = upVote.filter(id => id !== currentUser.id);\r\n               downVote = [...downVote, currentUser.id];\r\n            } else {\r\n               //No previous record, new down-vote\r\n               count--;\r\n               downVote = [...downVote, currentUser.id];\r\n            }\r\n         }\r\n         //Format object to send to the server\r\n         var updateObj = {\r\n            body: {\r\n               vote: {\r\n                  count,\r\n                  upVote,\r\n                  downVote\r\n               }\r\n            }\r\n         };\r\n         //Call action creator to update this post\r\n         this.props.updatePost(this.props.id, updateObj, this.props.mainPostId);\r\n      }\r\n   };\r\n   askLogin() {\r\n      if (this.state.askLogin && this.props.currentUser) {\r\n         this.setState({ askLogin: false });\r\n      } else if (this.state.askLogin) {\r\n         return <Login turnOffLogin={this.turnOffLogin} />;\r\n      }\r\n   }\r\n   turnOffLogin = () => {\r\n      this.setState({ askLogin: false });\r\n   };\r\n   manageUpVoteIconStyle() {\r\n      var { vote, currentUser } = this.props;\r\n      return currentUser && vote.upVote.includes(currentUser.id) ? 'vote--active' : null;\r\n   }\r\n   manageDownVoteIconStyle() {\r\n      var { vote, currentUser } = this.props;\r\n      return currentUser && vote.downVote.includes(currentUser.id) ? 'vote--active' : null;\r\n   }\r\n   render() {\r\n      var { vote } = this.props;\r\n      return (\r\n         <div className=\"vote\">\r\n            <i\r\n               className={`fas fa-caret-up ${this.manageUpVoteIconStyle()}`}\r\n               onClick={() => this.onVoteClick('upvote')}\r\n            />\r\n            {vote.count}\r\n            <i\r\n               className={`fas fa-caret-down ${this.manageDownVoteIconStyle()}`}\r\n               onClick={() => this.onVoteClick('downvote')}\r\n            />\r\n            {this.askLogin()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { updatePost }\r\n)(Vote);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport history from '../../history';\r\nimport Moment from 'react-moment';\r\nimport { selectHeadphoneUsingNameOnly } from '../../actions';\r\nimport ReplyCreate from './ReplyCreate';\r\nimport Vote from './Vote';\r\n\r\nclass MainPost extends React.Component {\r\n   state = {\r\n      renderReplyCreate: false\r\n   };\r\n   renderAvatar() {\r\n      var {\r\n         profile: { picture },\r\n         id\r\n      } = this.props.data.author;\r\n      return picture ? (\r\n         <img className=\"reply__avatar\" src={picture} alt=\"user avatar\" onClick={() => history.push(`/user/${id}`)} />\r\n      ) : null;\r\n   }\r\n   //Render tags selected by the author of this post\r\n   renderTags = () => {\r\n      var {\r\n         data: { tag }\r\n      } = this.props;\r\n      if (tag.length === 0) {\r\n         return null;\r\n      }\r\n      return tag.map(entry => {\r\n         return (\r\n            <div key={entry.tags} className=\"main-post__tag-item\">\r\n               {/* Tagged headphone's name */}\r\n               {/* If user clicks on the name of this tagged headphone, add this headphone to the list of selected headphones in /arena page */}\r\n               <h6\r\n                  className=\"main-post__tagged-headphone\"\r\n                  onClick={() => {\r\n                     this.props.selectHeadphoneUsingNameOnly(entry.brandAndModel);\r\n                  }}\r\n               >\r\n                  {entry.brandAndModel.toUpperCase()}\r\n               </h6>\r\n               {/* List of tags associated with this headphone */}\r\n               <div className=\"main-post__tags\">\r\n                  {entry.tags.map(tag => (\r\n                     <div className=\"main-post__tag\" key={tag}>\r\n                        {tag.toUpperCase()}\r\n                     </div>\r\n                  ))}\r\n               </div>\r\n            </div>\r\n         );\r\n      });\r\n   };\r\n   renderEditButton() {\r\n      var { author, _id } = this.props.data;\r\n      var { currentUser } = this.props;\r\n      return currentUser && author.id === currentUser.id ? (\r\n         <i className=\"fas fa-edit\" onClick={() => history.push(`/posts/${_id}/edit`)} />\r\n      ) : null;\r\n   }\r\n   //Render the create reply form\r\n   renderReplyCreate() {\r\n      if (!this.state.renderReplyCreate) {\r\n         return null;\r\n      }\r\n      var { _id, title, category } = this.props.data;\r\n      return (\r\n         <ReplyCreate\r\n            idToReplyTo={_id}\r\n            title={title}\r\n            category={category}\r\n            turnOffReplyCreate={this.turnOffReplyCreate}\r\n            mainPostId={_id}\r\n         />\r\n      );\r\n   }\r\n   turnOffReplyCreate = () => {\r\n      //Callback to be passed as a prop to ReplyCreate component to turn off its display after reply has been created\r\n      this.setState({ renderReplyCreate: false });\r\n   };\r\n   manageReplyCreateButton() {\r\n      return this.state.renderReplyCreate ? { display: 'none' } : null;\r\n   }\r\n\r\n   render() {\r\n      if (!this.props.data) {\r\n         return <div>Loading</div>;\r\n      }\r\n      var { title, created, content, author, vote, _id, category } = this.props.data;\r\n      return (\r\n         <div className=\"main-post\">\r\n            {/* Title */}\r\n            <div className=\"main-post__title\">\r\n               <span>{title}</span>\r\n            </div>\r\n            {/* Category */}\r\n            <div className=\"main-post__category\">{category}</div>\r\n            <div className=\"main-post__container\">\r\n               {/* Date */}\r\n               <Moment format=\"D MMM YYYY\" withTitle className=\"main-post__date\">\r\n                  {created}\r\n               </Moment>\r\n               <div className=\"main-post__body\">\r\n                  <div className=\"main-post__author\">\r\n                     {/* Author Avatar */}\r\n                     {this.renderAvatar()}\r\n                     {/* Author Username */}\r\n                     <h4 className=\"main-post__username\" onClick={() => history.push(`/user/${author.id}`)}>\r\n                        {author.username}\r\n                     </h4>\r\n                  </div>\r\n                  {/* Content */}\r\n                  <p className=\"main-post__content\">{content}</p>\r\n               </div>\r\n               {/* Tags */}\r\n               <div className=\"main-post__tag-container\">{this.renderTags()}</div>\r\n               {/* Create reply form */}\r\n               {this.renderReplyCreate()}\r\n               {/* Edit button (If current user is the author of this post) */}\r\n               <div className=\"main-post__edit-button\">{this.renderEditButton()}</div>\r\n            </div>\r\n            {/* Create Reply Button  */}\r\n            <div\r\n               //Make this button disappear after ReplyCreate component appear\r\n               style={this.manageReplyCreateButton()}\r\n               onClick={() => this.setState({ renderReplyCreate: true })}\r\n               className=\"main-post__create-reply-button\"\r\n            >\r\n               <i className=\"far fa-comment-alt\" />\r\n            </div>\r\n            {/* Vote */}\r\n            <Vote vote={vote} id={_id} mainPostId={_id} />\r\n            <div className=\"main-post__horizontal-line-1\" />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   null,\r\n   { selectHeadphoneUsingNameOnly }\r\n)(MainPost);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { selectHeadphoneUsingNameOnly } from '../../actions';\r\nimport history from '../../history';\r\nimport ReplyCreate from './ReplyCreate';\r\nimport Vote from './Vote';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n   state = {\r\n      renderReplyCreate: false\r\n   };\r\n   renderAvatar() {\r\n      var {\r\n         profile: { picture },\r\n         id\r\n      } = this.props.data.author;\r\n      return picture ? (\r\n         <img className=\"reply__avatar\" src={picture} alt=\"user avatar\" onClick={() => history.push(`/user/${id}`)} />\r\n      ) : null;\r\n   }\r\n   //Render tags selected by the author of this reply\r\n   renderTags = () => {\r\n      var { data } = this.props;\r\n      if (data.tag.length === 0) {\r\n         return null;\r\n      }\r\n      return data.tag.map(entry => {\r\n         return (\r\n            <div key={entry.tags} className=\"reply__tag-item\">\r\n               <h6\r\n                  className=\"reply__tagged-headphone\"\r\n                  onClick={() => {\r\n                     this.props.selectHeadphoneUsingNameOnly(entry.brandAndModel);\r\n                  }}\r\n               >\r\n                  {entry.brandAndModel.toUpperCase()}\r\n               </h6>\r\n               <div className=\"reply__tags\">\r\n                  {entry.tags.map(tag => {\r\n                     return (\r\n                        <div className=\"reply__tag\" key={tag}>\r\n                           {tag.toUpperCase()}\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n            </div>\r\n         );\r\n      });\r\n   };\r\n   //Render replies to this reply\r\n   renderReplies = () => {\r\n      var { data } = this.props;\r\n      if (data.replies.length === 0) {\r\n         return null;\r\n      }\r\n      return data.replies.map(reply => (\r\n         <Reply\r\n            key={reply._id}\r\n            data={reply}\r\n            allowReply={this.props.tier < 3}\r\n            tier={this.props.tier + 1}\r\n            mainPostId={this.props.mainPostId}\r\n            currentUser={this.props.currentUser}\r\n         />\r\n      ));\r\n   };\r\n\r\n   //Render the button that triggers the create reply form\r\n   //Restrict reply creation after a certain nested level\r\n   //To prevent database from exploding and text from becoming too squashed up\r\n   renderButtonToTriggerReplyCreate = () => {\r\n      if (!this.props.allowReply) {\r\n         return null;\r\n      }\r\n      return (\r\n         <div\r\n            //Make this button disappear after ReplyCreate component appear\r\n            className=\"reply__create-reply-button\"\r\n            style={this.manageReplyCreateButton()}\r\n            onClick={() => this.setState({ renderReplyCreate: true })}\r\n         >\r\n            <i className=\"far fa-comment-alt\" />\r\n         </div>\r\n      );\r\n   };\r\n   manageReplyCreateButton() {\r\n      return this.state.renderReplyCreate ? { display: 'none' } : null;\r\n   }\r\n   //Render the create reply form\r\n   renderReplyCreate() {\r\n      if (!this.state.renderReplyCreate) {\r\n         return null;\r\n      }\r\n      var { _id, title, category } = this.props.data;\r\n      return (\r\n         <ReplyCreate\r\n            idToReplyTo={_id}\r\n            title={title}\r\n            category={category}\r\n            mainPostId={this.props.mainPostId}\r\n            turnOffReplyCreate={this.turnOffReplyCreate}\r\n         />\r\n      );\r\n   }\r\n   //Callback to be passed as a prop to ReplyCreate component to turn off its display after reply has been created\r\n   turnOffReplyCreate = () => {\r\n      this.setState({ renderReplyCreate: false });\r\n   };\r\n   renderEditButton = () => {\r\n      var {\r\n         data: { author, _id },\r\n         currentUser\r\n      } = this.props;\r\n      if (!currentUser || author.id !== currentUser.id) {\r\n         return null;\r\n      }\r\n      return <i className=\"fas fa-edit\" onClick={() => history.push(`/posts/${_id}/edit`)} />;\r\n   };\r\n\r\n   render() {\r\n      if (!this.props.data) {\r\n         return <div />;\r\n      }\r\n      var { created, content, author, vote, _id } = this.props.data;\r\n      return (\r\n         <div className=\"reply\">\r\n            {/* Date */}\r\n            <Moment format=\"D MMM YYYY\" withTitle className=\"reply__date\">\r\n               {created}\r\n            </Moment>\r\n            <div className=\"reply__body\">\r\n               <div className=\"reply__author\">\r\n                  {/* Author Avatar */}\r\n                  {this.renderAvatar()}\r\n                  {/* Author Username */}\r\n                  <h4 className=\"reply__username\" onClick={() => history.push(`/user/${author.id}`)}>\r\n                     {author.username}\r\n                  </h4>\r\n               </div>\r\n               {/* Content */}\r\n               <p className=\"reply__content\">{content}</p>\r\n            </div>\r\n            {/* Tags */}\r\n            <div className=\"reply__tag-container\">{this.renderTags()}</div>\r\n            {/* Create reply form */}\r\n            {this.renderReplyCreate()}\r\n            <div className=\"reply__buttons\">\r\n               {/* Vote */}\r\n               <Vote vote={vote} id={_id} mainPostId={this.props.mainPostId} />\r\n               {/* Create Reply Button  */}\r\n               {this.renderButtonToTriggerReplyCreate()}\r\n               {/* Edit button (If current user is the author of this reply) */}\r\n               <div className=\"reply__edit-button\">{this.renderEditButton()}</div>\r\n            </div>\r\n            {/* Replies to this reply */}\r\n            <div className=\"reply__sub-replies\">{this.renderReplies()}</div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   null,\r\n   { selectHeadphoneUsingNameOnly }\r\n)(Reply);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPost } from '../../actions';\r\nimport MainPost from './MainPost';\r\nimport Reply from './Reply';\r\nimport LiveChat from '../LiveChat/LiveChat';\r\nimport './PostShow.css';\r\n\r\nclass PostShow extends React.Component {\r\n   //Fetch all data related to this thread from the server\r\n   componentDidMount() {\r\n      this.props.fetchPost(this.props.match.params.id);\r\n   }\r\n   //Render replies of this thread\r\n   renderReplies = () => {\r\n      var { post, currentUser } = this.props;\r\n      if (!post) {\r\n         return null;\r\n      } else if (post.replies.length === 0) {\r\n         return null;\r\n      }\r\n      return post.replies.map(reply => (\r\n         <Reply\r\n            key={reply._id}\r\n            data={reply}\r\n            allowReply={true}\r\n            tier={1}\r\n            mainPostId={post._id}\r\n            currentUser={currentUser}\r\n         />\r\n      ));\r\n   };\r\n\r\n   render() {\r\n      var { post, currentUser } = this.props;\r\n      return (\r\n         <div className=\"post-show\">\r\n            {/* Main Post */}\r\n            <MainPost data={post} currentUser={currentUser} />\r\n            {/* Direct Replies */}\r\n            <div className=\"post-show__replies\">{this.renderReplies()}</div>\r\n            <div className=\"post-show__vertical-lines-1\" />\r\n            <LiveChat />\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { post: state.post, currentUser: state.currentUser };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchPost }\r\n)(PostShow);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { addGlobalError, fetchForumHomePosts } from '../../actions';\r\nimport history from '../../history';\r\nimport TagSystem from './TagSystem';\r\nimport Login from '../Authentication/Login';\r\nimport './PostCreate.css';\r\n\r\nclass PostCreate extends React.Component {\r\n   state = {\r\n      title: '',\r\n      category: '',\r\n      outputTags: [],\r\n      content: 'What do you want to share with your fellow Audiophiles today?'\r\n   };\r\n\r\n   //Store selected category to the state\r\n   onCategoryClick = category => {\r\n      this.setState({ category });\r\n   };\r\n   //Callback passed as props to child component TagSystem\r\n   retrieveTagsFromTagSystem = outputTags => {\r\n      this.setState({ outputTags });\r\n   };\r\n   onFormSubmit = event => {\r\n      event.preventDefault();\r\n      const { title, category, content } = this.state;\r\n      //Check authentication\r\n      if (this.props.currentUser) {\r\n         //Check for required fields\r\n         if (!title || !category || !content) {\r\n            this.props.addGlobalError('Do you have 1 category selected, title and content filled in?');\r\n         } else {\r\n            //Post new post form to server\r\n            this.postToServer();\r\n         }\r\n      }\r\n   };\r\n\r\n   postToServer = async () => {\r\n      //Format object to be posted to the database\r\n      var postObj = {\r\n         body: {\r\n            isMainPost: true,\r\n            title: this.state.title,\r\n            category: this.state.category,\r\n            tag: this.state.outputTags,\r\n            content: this.state.content\r\n         }\r\n      };\r\n      try {\r\n         //Create post in database\r\n         const response = await axios.post('/posts', postObj);\r\n         console.log(response);\r\n         if (postObj.body.tag.length > 0) {\r\n            //Add new tags to newly tagged headphones\r\n            const response2 = await axios.put(`/posts/${response.data._id}/addtags`, postObj);\r\n            console.log(response2);\r\n         }\r\n         this.props.fetchForumHomePosts();\r\n         history.push('/forum');\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n   //Add styling only to selected category\r\n   manageClass(category) {\r\n      return this.state.category === category ? 'active' : '';\r\n   }\r\n   //Display message to remind user to log in before creating a new post\r\n   askLogin() {\r\n      if (!this.props.currentUser) {\r\n         return <Login />;\r\n      }\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"post-create\">\r\n            {/* Page Title */}\r\n            <h1>New Post</h1>\r\n\r\n            <form onSubmit={this.onFormSubmit}>\r\n               {/* Post Title */}\r\n               <label>Title Of Post</label>\r\n               <input type=\"text\" value={this.state.title} onChange={e => this.setState({ title: e.target.value })} />\r\n               {/* Post Category */}\r\n               <div className=\"post-create__category\">\r\n                  <div className={this.manageClass('Comparison')} onClick={() => this.onCategoryClick('Comparison')}>\r\n                     Comparison\r\n                  </div>\r\n                  <div\r\n                     className={this.manageClass('Recommendation')}\r\n                     onClick={() => this.onCategoryClick('Recommendation')}\r\n                  >\r\n                     Budget Recommendation\r\n                  </div>\r\n                  <div className={this.manageClass('Review')} onClick={() => this.onCategoryClick('Review')}>\r\n                     Review\r\n                  </div>\r\n                  <div className={this.manageClass('General')} onClick={() => this.onCategoryClick('General')}>\r\n                     General Talk\r\n                  </div>\r\n               </div>\r\n               {/* Tagging Mechanism */}\r\n               <TagSystem compileTags={this.retrieveTagsFromTagSystem} />\r\n               {/* Post Contents */}\r\n               <textarea value={this.state.content} onChange={e => this.setState({ content: e.target.value })} />\r\n               <input type=\"submit\" />\r\n            </form>\r\n            {this.askLogin()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n//Get the name list of all headphones in the database\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { addGlobalError, fetchForumHomePosts }\r\n)(PostCreate);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { fetchPost, updatePost, addGlobalError } from '../../actions';\r\nimport history from '../../history';\r\nimport TagSystem from './TagSystem';\r\nimport Login from '../Authentication/Login';\r\nimport './PostEdit.css';\r\n\r\nclass PostEdit extends React.Component {\r\n   state = {\r\n      outputTags: [],\r\n      content: '',\r\n      prevTags: [],\r\n      postId: ''\r\n   };\r\n   //Fetch post's existing data from server\r\n   componentDidMount() {\r\n      this.props.fetchPost(this.props.match.params.id);\r\n   }\r\n   //Load existing data one time\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n      if (nextProps.post && nextProps.post._id !== prevState.postId) {\r\n         //DO NOT REFERENCE ARRAY FROM PROPS\r\n         var notReferencedArr = nextProps.post.tag.map(entry => {\r\n            return { brandAndModel: entry.brandAndModel, tags: [...entry.tags] };\r\n         });\r\n         return {\r\n            content: nextProps.post.content,\r\n            prevTags: notReferencedArr,\r\n            postId: nextProps.post._id\r\n         };\r\n      } else if (nextProps.match.params.id !== prevState.postId) {\r\n         nextProps.fetchPost(nextProps.match.params.id);\r\n      }\r\n\r\n      return null;\r\n   }\r\n   //Callback passed as props to child component TagSystem\r\n   retrieveTagsFromTagSystem = outputTags => {\r\n      this.setState({ outputTags });\r\n   };\r\n   onFormSubmit = event => {\r\n      event.preventDefault();\r\n      var { currentUser, post, addGlobalError, updatePost } = this.props;\r\n      if (currentUser.id !== post.author.id) {\r\n         //Display this message if current user is NOT the owner of this post\r\n         addGlobalError(\r\n            \"I mean, you wish you were the author of this post, but you are not. So you can't edit this post.\"\r\n         );\r\n      } else {\r\n         //Format object to send to the server\r\n         var updateObj = {\r\n            prevTags: this.state.prevTags,\r\n            body: {\r\n               tag: this.state.outputTags,\r\n               content: this.state.content\r\n            }\r\n         };\r\n         //Check for required fields\r\n         if (!this.state.content) {\r\n            addGlobalError('Please fill in some content at least...GEEZ...');\r\n         } else {\r\n            //Update post in the server database\r\n            updatePost(post._id, updateObj);\r\n            //Update tags in the database also\r\n            this.updateTagsInServer(updateObj);\r\n         }\r\n      }\r\n   };\r\n   updateTagsInServer = async updateObj => {\r\n      try {\r\n         //Remove previous tags from previously tagged headphones\r\n         //Note: this has to come before adding new tags (because $pull in mongodb will wipe ALL tag objects with the specified post id, not just one)\r\n         //So if you add new tags first, then remove, it will wipe the added new tags too\r\n         if (updateObj.prevTags.length > 0) {\r\n            var response1 = await axios.put(`/posts/${this.props.post._id}/removetags`, updateObj);\r\n            console.log(response1);\r\n         }\r\n         if (updateObj.body.tag.length > 0) {\r\n            //Add new tags to newly tagged headphones\r\n            var response2 = await axios.put(`/posts/${this.props.post._id}/addtags`, updateObj);\r\n            console.log(response2);\r\n         }\r\n         history.goBack();\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n   askLogin() {\r\n      if (!this.props.currentUser) {\r\n         return <Login />;\r\n      }\r\n   }\r\n   render() {\r\n      var { post } = this.props;\r\n      return (\r\n         <div className=\"post-edit\">\r\n            <h6>Edit Post</h6>\r\n            <form onSubmit={this.onFormSubmit}>\r\n               {/* Tagging Mechanism */}\r\n               <TagSystem\r\n                  previousTags={post ? post.tag : null}\r\n                  compileTags={this.retrieveTagsFromTagSystem}\r\n                  id={post ? post._id : null}\r\n               />\r\n               {/* Post Contents */}\r\n               <textarea onChange={e => this.setState({ content: e.target.value })} value={this.state.content} />\r\n               <input type=\"submit\" />\r\n               <button onClick={() => history.push(`/posts/${this.props.match.params.id}/delete`)}>Delete</button>\r\n            </form>\r\n            {this.askLogin()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { post: state.post, currentUser: state.currentUser };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchPost, updatePost, addGlobalError }\r\n)(PostEdit);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { addGlobalError } from '../../actions';\r\nimport history from '../../history';\r\nimport './PostDelete.css';\r\n\r\nclass PostDelete extends React.Component {\r\n   state = {\r\n      isActive: false\r\n   };\r\n\r\n   delete = async () => {\r\n      var postId = this.props.match.params.id;\r\n      try {\r\n         const response = await axios.delete(`/posts/${postId}`);\r\n         console.log(response);\r\n         history.push(`/posts/${postId}`);\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"delete-confirmation\">\r\n            <div className=\"delete-confirmation__box\">\r\n               <h5>Are you sure you want to delete this Post?</h5>\r\n               <div className=\"delete-confirmation__box-buttons\">\r\n                  <button onClick={this.delete}>Accept</button>\r\n                  <button onClick={() => history.goBack()}>Oopsie, go back</button>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default connect(\r\n   null,\r\n   { addGlobalError }\r\n)(PostDelete);\r\n","import React from 'react';\r\n\r\nconst Blacksmith = () => {\r\n   return <div>Blacksmith</div>;\r\n};\r\n\r\nexport default Blacksmith;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { addGlobalError } from '../../actions';\r\nclass UploadPicture extends React.Component {\r\n   state = {\r\n      imageUrl: ''\r\n   };\r\n   //Upload image url to the database\r\n   onUploadClick = async () => {\r\n      try {\r\n         const response = await axios.put(`/user-profile/${this.props.profileId}`, {\r\n            picture: this.state.imageUrl\r\n         });\r\n         console.log(response);\r\n         //Turn off this component\r\n         this.props.turnOff();\r\n      } catch (err) {\r\n         this.props.addGlobalError(err.response.data);\r\n      }\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            URL link to image{' '}\r\n            <input\r\n               type=\"text\"\r\n               value={this.state.imageUrl}\r\n               onChange={e => this.setState({ imageUrl: e.target.value })}\r\n            />\r\n            <button onClick={this.onUploadClick}>Upload</button>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default connect(\r\n   null,\r\n   { addGlobalError }\r\n)(UploadPicture);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchListOfHeadphones, updateHeadphoneRating } from '../../actions';\r\n\r\nclass PersonalHeadphones extends React.Component {\r\n   state = {\r\n      searchTerm: '',\r\n      searchMatches: [],\r\n      taggedHeadphones: [],\r\n      profileId: ''\r\n   };\r\n   componentDidMount() {\r\n      //Give me the official list of headphones from the database\r\n      this.props.fetchListOfHeadphones();\r\n   }\r\n   //Load up previous headphones preferences already existing in the user's profile\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n      if (prevState.profileId !== nextProps.profileId && nextProps.headphones) {\r\n         return { taggedHeadphones: nextProps.headphones, profileId: nextProps.profileId };\r\n      }\r\n      return null;\r\n   }\r\n   //Invoked as user types in the search box\r\n   onHeadphoneSearchInput = e => {\r\n      this.setState({ searchTerm: e.target.value });\r\n      if (e.target.value.length > 0 && this.props.listOfHeadphones) {\r\n         this.searchForHeadphones(e.target.value);\r\n      } else {\r\n         this.setState({ searchMatches: [] });\r\n      }\r\n   };\r\n   //Search for headphone names in the database that are close to the search term inputted by the user\r\n   searchForHeadphones = searchTerm => {\r\n      //Remove spaces from search term inputted by the user\r\n      var removeSpace = searchTerm.replace(/\\s/g, '');\r\n      //Preparing the search term to be converted to regular expression\r\n      //Giving allowance for stray spaces and stray letters (i.e just check whether the headphone's name contains every letter from the search term)\r\n      var regExpPrepare = removeSpace.split('').join('.*');\r\n\r\n      //Convert to regular expression\r\n      var regExp = new RegExp(regExpPrepare, 'i');\r\n      //Find headphones whose name contains every letter in the search term\r\n      var searchMatches = this.props.listOfHeadphones.filter(headphone => {\r\n         return regExp.test(headphone.brandAndModel);\r\n      });\r\n      //Don't want to show already tagged headphones\r\n      if (this.state.taggedHeadphones.length > 0) {\r\n         searchMatches = searchMatches.filter(headphone => {\r\n            return this.state.taggedHeadphones.some(entry => entry.brandAndModel !== headphone.brandAndModel);\r\n         });\r\n      }\r\n      searchMatches = searchMatches.slice(0, 4);\r\n\r\n      //Store the successful matches in the component's state\r\n      this.setState({ searchMatches });\r\n   };\r\n   renderSuggestionsFromMatches = () => {\r\n      //Render headphone suggestion buttons\r\n      return this.state.searchMatches.map(match => {\r\n         return (\r\n            <button key={match.brandAndModel} onClick={() => this.addTaggedHeadphone(match.brandAndModel)}>\r\n               {match.brandAndModel}\r\n            </button>\r\n         );\r\n      });\r\n   };\r\n   addTaggedHeadphone = headphoneName => {\r\n      this.setState(\r\n         {\r\n            taggedHeadphones: [...this.state.taggedHeadphones, { brandAndModel: headphoneName, rating: 0 }],\r\n            searchTerm: '',\r\n            searchMatches: []\r\n         },\r\n         // Update tagged headphone to server\r\n         () => {\r\n            this.props.updateHeadphoneRating(this.props.profileId, {\r\n               headphones: this.state.taggedHeadphones\r\n            });\r\n         }\r\n      );\r\n   };\r\n   removeTaggedHeadphone = headphoneName => {\r\n      var remainingTaggedHeadphones = this.state.taggedHeadphones.filter(\r\n         headphone => headphone.brandAndModel !== headphoneName\r\n      );\r\n      this.setState({ taggedHeadphones: remainingTaggedHeadphones }, () => {\r\n         //Update removal of tagged headphone to server\r\n         this.props.updateHeadphoneRating(this.props.profileId, {\r\n            headphones: this.state.taggedHeadphones\r\n         });\r\n      });\r\n   };\r\n   renderTaggedHeadphones = () => {\r\n      //Display tagged headphones\r\n      //Sort by alphabetical order - retain same order even after rating modification\r\n      var sortedTaggedHeadphones = [...this.state.taggedHeadphones].sort((a, b) =>\r\n         a.brandAndModel < b.brandAndModel ? -1 : 1\r\n      );\r\n      return sortedTaggedHeadphones.map(taggedHeadphone => {\r\n         var { brandAndModel, rating } = taggedHeadphone;\r\n         return (\r\n            <div className=\"personal-headphones__tagged-headphone\" key={brandAndModel}>\r\n               {brandAndModel}\r\n               {/* 5 Hearts rating system for each headphone */}\r\n               <i\r\n                  className={rating > 0 ? 'fas fa-heart' : 'far fa-heart'}\r\n                  onClick={() =>\r\n                     rating === 1 ? this.onHeartClick(brandAndModel, 0) : this.onHeartClick(brandAndModel, 1)\r\n                  }\r\n               />\r\n               <i\r\n                  className={rating > 1 ? 'fas fa-heart' : 'far fa-heart'}\r\n                  onClick={() => this.onHeartClick(brandAndModel, 2)}\r\n               />\r\n               <i\r\n                  className={rating > 2 ? 'fas fa-heart' : 'far fa-heart'}\r\n                  onClick={() => this.onHeartClick(brandAndModel, 3)}\r\n               />\r\n               <i\r\n                  className={rating > 3 ? 'fas fa-heart' : 'far fa-heart'}\r\n                  onClick={() => this.onHeartClick(brandAndModel, 4)}\r\n               />\r\n               <i\r\n                  className={rating > 4 ? 'fas fa-heart' : 'far fa-heart'}\r\n                  onClick={() => this.onHeartClick(brandAndModel, 5)}\r\n               />\r\n               {/* Button to untag headphone */}\r\n               {this.props.isOwner ? (\r\n                  <i className=\"fas fa-times\" onClick={() => this.removeTaggedHeadphone(brandAndModel)} />\r\n               ) : null}\r\n            </div>\r\n         );\r\n      });\r\n   };\r\n   //Update the rating for this headphone based on the number of hearts clicked by the user\r\n   onHeartClick = (headphoneName, rating) => {\r\n      if (this.props.isOwner) {\r\n         //Find this headphone's entry\r\n         var currentEntry = this.state.taggedHeadphones.find(entry => entry.brandAndModel === headphoneName);\r\n         //Find the remaining non-relevant headphone entries\r\n         var allEntriesExceptCurrent = this.state.taggedHeadphones.filter(\r\n            entry => entry.brandAndModel !== headphoneName\r\n         );\r\n         //Modify the rating for this headphone\r\n         currentEntry.rating = rating;\r\n         //Update state then callback and update rating to server\r\n         this.setState({ taggedHeadphones: [...allEntriesExceptCurrent, currentEntry] }, () => {\r\n            this.props.updateHeadphoneRating(this.props.profileId, {\r\n               headphones: this.state.taggedHeadphones\r\n            });\r\n         });\r\n      }\r\n   };\r\n   render() {\r\n      return (\r\n         <div className=\"personal-headphones\">\r\n            {/* Searchbox for headphones names */}\r\n            {this.props.isOwner ? (\r\n               <input type=\"text\" value={this.state.searchTerm} onChange={this.onHeadphoneSearchInput} />\r\n            ) : null}\r\n            {/* Buttons representing successful search matches */}\r\n            {this.renderSuggestionsFromMatches()}\r\n            {/* Tagged headphones */}\r\n            {this.renderTaggedHeadphones()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\n//Get the name list of all headphones in the database\r\nconst mapStateToProps = state => {\r\n   return { listOfHeadphones: state.listOfHeadphones, currentUser: state.currentUser };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchListOfHeadphones, updateHeadphoneRating }\r\n)(PersonalHeadphones);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport history from '../../history';\r\nimport axios from 'axios';\r\nimport { addGlobalError } from '../../actions';\r\n\r\nclass SendPrivateMessage extends React.Component {\r\n   state = {\r\n      subject: '',\r\n      message: '',\r\n      replyTo: null\r\n   };\r\n   //Load previous private message data if this is the owner trying to make a reply back to the sender\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n      if (nextProps.replyTo && !prevState.replyTo) {\r\n         return {\r\n            replyTo: { ...nextProps.replyTo },\r\n            subject: nextProps.replyTo.subject.includes('RE:')\r\n               ? nextProps.replyTo.subject\r\n               : `RE: ${nextProps.replyTo.subject}`\r\n         };\r\n      }\r\n      return null;\r\n   }\r\n   //Render sender's username if this is the owner replying\r\n   renderReplyUsername = () => {\r\n      if (!this.state.replyTo) {\r\n         return null;\r\n      }\r\n      const { fromUsername } = this.state.replyTo;\r\n      return (\r\n         <div>\r\n            <div>Replying to {fromUsername}</div>\r\n         </div>\r\n      );\r\n   };\r\n   //Post private message to the server\r\n   postPrivateMessage = async () => {\r\n      //Format object to be posted to the server\r\n      const postObj = {\r\n         toUserId: this.state.replyTo ? this.state.replyTo.fromUserId : this.props.userId,\r\n         body: {\r\n            subject: this.state.subject,\r\n            message: this.state.message,\r\n            fromUsername: this.props.currentUser.username,\r\n            fromUserId: this.props.currentUser.id\r\n         }\r\n      };\r\n      //Check for required fields\r\n      if (!this.state.subject || !this.state.message) {\r\n         this.props.addGlobalError(\r\n            'Your message needs a subject and some content... Do not become a spammer...Or Else.'\r\n         );\r\n      } else {\r\n         try {\r\n            //Post private message\r\n            const response = await axios.post(`/user-profile/${this.props.profileId}/message`, postObj);\r\n            console.log(response);\r\n            //Then turn off this interface when done\r\n            this.props.turnOff();\r\n         } catch (err) {\r\n            this.props.addGlobalError(err.response.data);\r\n         }\r\n      }\r\n   };\r\n\r\n   checkLogin() {\r\n      //Proceed if user is logged in\r\n      if (this.props.currentUser) {\r\n         return null;\r\n      }\r\n      history.go(0);\r\n   }\r\n   render() {\r\n      return (\r\n         <div>\r\n            {/* Render sender's username if this is a reply */}\r\n            {this.renderReplyUsername()}\r\n            {/* Subject */}\r\n            <input type=\"text\" value={this.state.subject} onChange={e => this.setState({ subject: e.target.value })} />\r\n            {/* Message content */}\r\n            <input type=\"text\" value={this.state.message} onChange={e => this.setState({ message: e.target.value })} />\r\n            <button onClick={this.postPrivateMessage}>Send</button>\r\n            {/* Make user log in if he is not */}\r\n            {this.checkLogin()}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { addGlobalError }\r\n)(SendPrivateMessage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { fetchUserProfile, redirectToMainPost } from '../../actions';\r\nimport history from '../../history';\r\nimport UploadPicture from './UploadPicture';\r\nimport PersonalHeadphones from './PersonalHeadphones';\r\nimport SendPrivateMessage from './SendPrivateMessage';\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends React.Component {\r\n   state = {\r\n      editActive: false,\r\n      privateMessageActive: false,\r\n      replyTo: null,\r\n      isOwner: null,\r\n      userId: ''\r\n   };\r\n   //Fetch this user profile data\r\n   componentDidMount() {\r\n      this.setState({ userId: this.props.match.params.id }, () =>\r\n         this.props.fetchUserProfile(this.props.match.params.id)\r\n      );\r\n   }\r\n   //If current user owner clicks on a sender's username it will cause params in url to change but page does not reload cause it is technically showing the same component\r\n   //So have to manually refresh, refetch profile data and reset state\r\n   static getDerivedStateFromProps(nextProps, prevState) {\r\n      //This checks if the currently displayed profile data's id is the same as the id in the url params\r\n      if (prevState.userId !== nextProps.match.params.id) {\r\n         nextProps.fetchUserProfile(nextProps.match.params.id);\r\n         return { isOwner: null };\r\n      }\r\n      return null;\r\n   }\r\n   componentDidUpdate() {\r\n      this.checkAuthorization();\r\n   }\r\n   //Check if user is logged in, and if user is the owner of this profile\r\n   checkAuthorization = () => {\r\n      if (this.state.isOwner === null && this.props.currentUser) {\r\n         this.props.currentUser.id === this.props.match.params.id\r\n            ? this.setState({ isOwner: true, userId: this.props.match.params.id })\r\n            : this.setState({ isOwner: false, userId: this.props.match.params.id });\r\n      }\r\n   };\r\n\r\n   //Render posts created by this User\r\n   renderPosts(posts) {\r\n      return posts.map(post => (\r\n         <div key={post._id}>\r\n            POSTS\r\n            {/* If user clicks on the title of this post, redirect to this post's show page */}\r\n            <h3 onClick={() => this.props.redirectToMainPost(post)}>{post.title}</h3>\r\n            <p>{post.content.substring(0, 100)}</p>\r\n            <div>\r\n               <span>Votes {post.vote.count} </span>\r\n               {/* Date */}\r\n               <Moment fromNow>{post.created}</Moment>\r\n            </div>\r\n            {/* Edit button (If current user is the owner) */}\r\n            {this.props.currentUser && post.author.id === this.props.currentUser.id ? (\r\n               <i className=\"fas fa-edit\" onClick={() => history.push(`/posts/${post._id}/edit`)} />\r\n            ) : null}\r\n         </div>\r\n      ));\r\n   }\r\n\r\n   //Render private messages sent to this user\r\n   //Current user can only see this if he is the owner of this profile\r\n   renderPrivateMessages = privateMessages => {\r\n      return privateMessages.map(message => {\r\n         return (\r\n            <div key={message._id}>\r\n               <h3>{message.subject}</h3>\r\n               {/* Redirects to sender's profile page if user clicks on the sender's username */}\r\n               <h6\r\n                  onClick={() => {\r\n                     history.push(`/user/${message.fromUserId}`);\r\n                  }}\r\n               >\r\n                  From {message.fromUsername}\r\n               </h6>\r\n               {/* Clicking on this reply icon will allow user to send a private message back to the sender */}\r\n               <i\r\n                  className=\"fas fa-reply\"\r\n                  onClick={() =>\r\n                     this.setState({\r\n                        replyTo: { ...message },\r\n                        privateMessageActive: true\r\n                     })\r\n                  }\r\n               />\r\n               <p>{message.message}</p>\r\n            </div>\r\n         );\r\n      });\r\n   };\r\n   //Activate the interface that will allow current user to send a private message to the owner of this profile\r\n   activatePrivateMessage = () => {\r\n      //Ask user to log in if he is not\r\n      if (!this.props.currentUser) {\r\n         history.push('/login');\r\n         //Activate interface if user is logged in and he is not the owner of this profile\r\n      } else if (this.state.isOwner === false) {\r\n         this.setState({ privateMessageActive: true });\r\n      }\r\n   };\r\n   //Turn off the interfaces to re-upload avatar picture and send private message\r\n   turnOffInterfaces = () => {\r\n      this.setState({ editActive: false, privateMessageActive: false, replyTo: null });\r\n      this.props.fetchUserProfile(this.props.match.params.id);\r\n   };\r\n\r\n   render() {\r\n      if (!this.props.profile) {\r\n         return <div>Loading</div>;\r\n      }\r\n      var { username, posts, picture, _id, headphones, created, userId, privateMessages } = this.props.profile;\r\n      return (\r\n         <div className=\"dashboard\">\r\n            {/* Username */}\r\n            <h1>{username}</h1>\r\n            {/* Date since user joined the forum */}\r\n            <Moment fromNow>{created}</Moment>\r\n            {/* Personal headphones preferences */}\r\n            <PersonalHeadphones headphones={headphones} profileId={_id} isOwner={this.state.isOwner} />\r\n            {/* Avatar picture */}\r\n            {picture ? <img className=\"dashboard__picture\" src={picture} alt=\"profile\" /> : null}\r\n            {/* Show private messages */}\r\n            {this.renderPrivateMessages(privateMessages)}\r\n            {/* Private message the owner of this profile */}\r\n            {!this.state.isOwner ? <i className=\"fas fa-envelope\" onClick={this.activatePrivateMessage} /> : null}\r\n            {/* Interface to send private message */}\r\n            {this.state.privateMessageActive ? (\r\n               <SendPrivateMessage\r\n                  userId={userId}\r\n                  profileId={_id}\r\n                  turnOff={this.turnOffInterfaces}\r\n                  replyTo={this.state.replyTo ? this.state.replyTo : null}\r\n               />\r\n            ) : null}\r\n            {/* Posts created by the User */}\r\n            {this.renderPosts(posts)}\r\n            {/* Interface to re-upload avatar picture */}\r\n            {this.state.isOwner ? (\r\n               <button onClick={() => this.setState({ editActive: true })}>Upload Avatar</button>\r\n            ) : null}\r\n            {this.state.editActive ? <UploadPicture profileId={_id} turnOff={this.turnOffInterfaces} /> : null}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   var profile;\r\n   //Exclude private messages from the fetched profile data if the current user is not the owner of this user profile\r\n   if (state.currentUser && state.userProfile && state.currentUser.id === state.userProfile.userId) {\r\n      profile = state.userProfile;\r\n   } else if (state.userProfile) {\r\n      profile = { ...state.userProfile, privateMessages: [] };\r\n   }\r\n   return { profile, currentUser: state.currentUser };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchUserProfile, redirectToMainPost }\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport history from '../../history';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\n\r\nconst Authentication = ({ currentUser }) => {\r\n   //If user is already logged in then redirect to user's profile page\r\n   if (currentUser) {\r\n      history.push(`/user/${currentUser.id}`);\r\n   }\r\n   return (\r\n      <div>\r\n         Are you new here?\r\n         <Register redirectIfDone={true} />\r\n         Or do you have an existing account?\r\n         <Login redirectIfDone={true} />\r\n      </div>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n   return { currentUser: state.currentUser };\r\n};\r\nexport default connect(mapStateToProps)(Authentication);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { checkUser } from '../../actions';\r\nimport './CheckAuth.css';\r\n\r\nclass CheckAuth extends React.Component {\r\n   //Check if user is authenticated\r\n   componentDidMount() {\r\n      if (!this.props.current) {\r\n         this.props.checkUser();\r\n      }\r\n   }\r\n   //Display user's authentication status\r\n   render() {\r\n      return (\r\n         <div className=\"check-auth\">{this.props.current ? `Log In status ${this.props.current.username}` : 'MEH'}</div>\r\n      );\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return { current: state.currentUser };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { checkUser }\r\n)(CheckAuth);\r\n","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport history from '../history';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchListOfHeadphones } from '../actions';\r\nimport Landing from './Landing';\r\nimport NavigationBar from './NavigationBar';\r\nimport GlobalError from './GlobalError';\r\nimport Arena from './Arena/Arena';\r\nimport HeadphoneCreate from './Arena/HeadphoneCreate';\r\nimport HeadphoneEdit from './Arena/HeadphoneEdit';\r\nimport Forum from './Forum/Forum';\r\nimport PostShow from './Forum/PostShow';\r\nimport PostCreate from './Forum/PostCreate';\r\nimport PostEdit from './Forum/PostEdit';\r\nimport PostDelete from './Forum/PostDelete';\r\nimport Blacksmith from './Blacksmith/Blacksmith';\r\nimport Dashboard from './UserProfile/Dashboard';\r\n\r\n// delete\r\nimport Authentication from './Authentication/Authentication';\r\nimport CheckAuth from './Authentication/CheckAuth';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n   componentDidMount() {\r\n      this.props.fetchListOfHeadphones();\r\n   }\r\n   componentDidUpdate() {\r\n      if (!this.props.listOfHeadphones) {\r\n         this.props.fetchListOfHeadphones();\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Router history={history}>\r\n            <div>\r\n               <Switch>\r\n                  <Route path=\"/\" exact component={Landing} />\r\n                  <Route path=\"/arena\" component={Arena} />\r\n                  <Route path=\"/headphones/new\" component={HeadphoneCreate} />\r\n                  <Route path=\"/headphones/edit\" component={HeadphoneEdit} />\r\n                  <Route path=\"/forum\" component={Forum} />\r\n                  <Route path=\"/posts/new\" component={PostCreate} />\r\n                  <Route exact path=\"/posts/:id\" component={PostShow} />\r\n                  <Route path=\"/posts/:id/edit\" component={PostEdit} />\r\n                  <Route path=\"/posts/:id/delete\" component={PostDelete} />\r\n                  <Route path=\"/blacksmith\" component={Blacksmith} />\r\n                  {/* <Route path=\"/mods/new\" component={ModCreate} />\r\n               <Route path=\"/mods/:id\" exact component={ModShow} /> */}\r\n                  {/* <Route path=\"/mods/:id/edit\" exact component={ModEdit} /> */}\r\n                  <Route path=\"/login\" component={Authentication} />\r\n                  <Route path=\"/user/:id\" component={Dashboard} />\r\n               </Switch>\r\n               <CheckAuth />\r\n               <NavigationBar />\r\n               <GlobalError />\r\n               {/* <div className=\"forum-lines\">\r\n                  <div />\r\n                  <div />\r\n                  <div />\r\n                  <div />\r\n               </div> */}\r\n            </div>\r\n         </Router>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return { listOfHeadphones: state.listOfHeadphones };\r\n};\r\nexport default connect(\r\n   mapStateToProps,\r\n   { fetchListOfHeadphones }\r\n)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { headphoneListReducer, selectedHeadphoneReducer, topPostsReducer, fullHeadphoneReducer } from './arenaReducers';\r\nimport { forumPostsReducer, forumSearchTermReducer, searchPostsReducer, postReducer } from './forumReducers';\r\nimport { userProfileReducer } from './userProfileReducers';\r\nimport { currentUserReducer } from './authenticationReducers';\r\nimport { globalErrorReducer } from './errorReducers';\r\n\r\nexport default combineReducers({\r\n   listOfHeadphones: headphoneListReducer,\r\n   listOfSelectedHeadphones: selectedHeadphoneReducer,\r\n   fullHeadphones: fullHeadphoneReducer,\r\n   topPosts: topPostsReducer,\r\n   forumPosts: forumPostsReducer,\r\n   forumSearchTerm: forumSearchTermReducer,\r\n   forumSearchPosts: searchPostsReducer,\r\n   post: postReducer,\r\n   userProfile: userProfileReducer,\r\n   currentUser: currentUserReducer,\r\n   globalError: globalErrorReducer\r\n});\r\n","export const headphoneListReducer = (state = null, action) => {\r\n   switch (action.type) {\r\n      case 'FETCHED_LIST_OF_HEADPHONES':\r\n         return action.payload;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\nexport const fullHeadphoneReducer = (state = [], action) => {\r\n   switch (action.type) {\r\n      case 'FETCHED_FULL_HEADPHONE':\r\n         if (!state.some(entry => entry._id === action.payload._id)) {\r\n            return [...state, action.payload];\r\n         }\r\n         return state;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\nexport const selectedHeadphoneReducer = (state = [], action) => {\r\n   if (\r\n      action.type === 'HEADPHONE_SELECTED' &&\r\n      state.every(headphone => headphone.brandAndModel !== action.payload.brandAndModel)\r\n   ) {\r\n      return [...state, action.payload];\r\n   } else if (action.type === 'HEADPHONE_REMOVED') {\r\n      return state.filter(function(headphone) {\r\n         return headphone !== action.payload;\r\n      });\r\n   }\r\n   return state;\r\n};\r\n\r\nexport const topPostsReducer = (state = [], action) => {\r\n   switch (action.type) {\r\n      case 'FETCHED_TOP_POSTS':\r\n         if (!state.some(entry => entry.headphone === action.payload.headphone)) {\r\n            return [...state, action.payload];\r\n         }\r\n         return state;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","export const forumPostsReducer = (state = null, action) => {\r\n   switch (action.type) {\r\n      case 'FETCHED_FORUM_POSTS':\r\n         return action.payload;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\nexport const forumSearchTermReducer = (state = '', action) => {\r\n   switch (action.type) {\r\n      case 'FORUM_SEARCH_TERM':\r\n         return action.payload;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\nexport const searchPostsReducer = (state = null, action) => {\r\n   switch (action.type) {\r\n      case 'FETCHED_UNPOPULATED_SEARCH_POSTS':\r\n         return action.payload;\r\n      case 'FETCHED_SEARCH_POSTS':\r\n         //Calculate the total number of replies for each search post and add that as a property to each search post's object\r\n         var postsWithRepliesCount = action.payload.map(post => {\r\n            var totalReplies = 0;\r\n            if (post.replies) {\r\n               post.replies.forEach(reply1 => {\r\n                  totalReplies++;\r\n                  if (reply1.replies) {\r\n                     reply1.replies.forEach(reply2 => {\r\n                        totalReplies++;\r\n                        if (reply2.replies) {\r\n                           reply2.replies.forEach(reply3 => {\r\n                              totalReplies++;\r\n                              if (reply3.replies) {\r\n                                 reply3.replies.forEach(reply4 => {\r\n                                    totalReplies++;\r\n                                 });\r\n                              }\r\n                           });\r\n                        }\r\n                     });\r\n                  }\r\n               });\r\n            }\r\n\r\n            return { ...post, totalReplies };\r\n         });\r\n         return postsWithRepliesCount;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\nexport const postReducer = (state = null, action) => {\r\n   switch (action.type) {\r\n      case 'FETCHED_POST':\r\n         return action.payload;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","export const userProfileReducer = (state = null, action) => {\r\n   switch (action.type) {\r\n      case 'FETCHED_USER_PROFILE':\r\n         return action.payload;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","export const currentUserReducer = (state = null, action) => {\r\n   switch (action.type) {\r\n      case 'CURRENT_USER':\r\n         //If user is logged-out\r\n         if (!action.payload) {\r\n            return null;\r\n         }\r\n         //If user is logged-in\r\n         return { username: action.payload.username, id: action.payload._id };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","export const globalErrorReducer = (state = '', action) => {\r\n   switch (action.type) {\r\n      case 'ERROR_MESSAGE':\r\n         return action.payload;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n      <App />\r\n   </Provider>,\r\n   document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}